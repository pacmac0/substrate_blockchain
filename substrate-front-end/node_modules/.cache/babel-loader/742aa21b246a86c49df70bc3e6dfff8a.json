{"ast":null,"code":"var _jsxFileName = \"/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-front-end-template/src/NodeInfo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const {\n    api,\n    socket\n  } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([api.rpc.system.chain(), api.rpc.system.name(), api.rpc.system.version()]);\n        setNodeInfo({\n          chain,\n          nodeName,\n          nodeVersion\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getInfo();\n  }, [api.rpc.system]);\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: nodeInfo.nodeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: nodeInfo.chain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"setting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \"v\", nodeInfo.nodeVersion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"TBkAb++sHMVZGNKdjgnZxKZgLFU=\", false, function () {\n  return [useSubstrate];\n});\n\n_c = Main;\nexport default function NodeInfo(props) {\n  _s2();\n\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.system && api.rpc.system.chain && api.rpc.system.name && api.rpc.system.version ? /*#__PURE__*/_jsxDEV(Main, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this) : null;\n}\n\n_s2(NodeInfo, \"a5IVjGvlzdb5yuE5zCYn+JGZcoo=\", false, function () {\n  return [useSubstrate];\n});\n\n_c2 = NodeInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"NodeInfo\");","map":{"version":3,"sources":["/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-front-end-template/src/NodeInfo.js"],"names":["React","useEffect","useState","Card","Icon","Grid","useSubstrate","Main","props","api","socket","nodeInfo","setNodeInfo","getInfo","chain","nodeName","nodeVersion","Promise","all","rpc","system","name","version","e","console","error","NodeInfo"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,mBAAjC;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBJ,YAAY,EAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,IAAiC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACvDT,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeN,KAAf,EADuD,EAEvDL,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeC,IAAf,EAFuD,EAGvDZ,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeE,OAAf,EAHuD,CAAZ,CAA7C;AAKAV,QAAAA,WAAW,CAAC;AAAEE,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBC,UAAAA;AAAnB,SAAD,CAAX;AACD,OAPD,CAOE,OAAOO,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAXD;;AAYAV,IAAAA,OAAO;AACR,GAdQ,EAcN,CAACJ,GAAG,CAACU,GAAJ,CAAQC,MAAT,CAdM,CAAT;AAgBA,sBACE,QAAC,IAAD,CAAM,MAAN;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,OAAN;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,oBAAcT,QAAQ,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE;AAAA,sBAAOJ,QAAQ,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,IAAD,CAAM,WAAN;AAAA,oBAAmBJ;AAAnB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,OAC2BC,QAAQ,CAACK,WADpC;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApCQT,I;UACiBD,Y;;;KADjBC,I;AAsCT,eAAe,SAASmB,QAAT,CAAmBlB,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,SAAOG,GAAG,CAACU,GAAJ,IACLV,GAAG,CAACU,GAAJ,CAAQC,MADH,IAELX,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeN,KAFV,IAGLL,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeC,IAHV,IAILZ,GAAG,CAACU,GAAJ,CAAQC,MAAR,CAAeE,OAJV,gBAKH,QAAC,IAAD,OAAUd;AAAV;AAAA;AAAA;AAAA;AAAA,UALG,GAMH,IANJ;AAOD;;IATuBkB,Q;UACNpB,Y;;;MADMoB,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api, socket } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>{socket}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version\n    ? <Main {...props} />\n    : null;\n}\n"]},"metadata":{},"sourceType":"module"}