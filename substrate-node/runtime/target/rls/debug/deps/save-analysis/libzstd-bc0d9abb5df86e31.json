{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9","program":"/Users/pacmac/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","zstd","--edition=2018","/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=bc0d9abb5df86e31","-C","extra-filename=-bc0d9abb5df86e31","--out-dir","/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps","-L","dependency=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps","--extern","zstd_safe=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libzstd_safe-55dbc6cc60300040.rmeta","--cap-lints","allow","-L","native=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/build/zstd-sys-d5ad340433c57e7a/out","--error-format=json","--sysroot","/Users/pacmac/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libzstd-bc0d9abb5df86e31.rmeta"},"prelude":{"crate_id":{"name":"zstd","disambiguator":[10809510713427011764,4576674487140423919]},"crate_root":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src","external_crates":[{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","num":17,"id":{"name":"zstd_safe","disambiguator":[3507760704032278577,18226327844779114766]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","num":18,"id":{"name":"libc","disambiguator":[5545881700167923370,917776168194561654]}},{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","num":19,"id":{"name":"zstd_sys","disambiguator":[11038150521201621216,11171768801898145418]}}],"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":0,"byte_end":1605,"line_start":1,"line_end":65,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1867,"byte_end":1877,"line_start":10,"line_end":10,"column_start":27,"column_end":37},"alias_span":null,"name":"Compressor","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1907,"byte_end":1919,"line_start":11,"line_end":11,"column_start":29,"column_end":41},"alias_span":null,"name":"Decompressor","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":17,"index":182},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9586,"byte_end":9591,"line_start":23,"line_end":23,"column_start":21,"column_end":26},"alias_span":null,"name":"CDict","value":"","parent":{"krate":0,"index":53}},{"kind":"Use","ref_id":{"krate":17,"index":202},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9593,"byte_end":9598,"line_start":23,"line_end":23,"column_start":28,"column_end":33},"alias_span":null,"name":"DDict","value":"","parent":{"krate":0,"index":53}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/mod.rs","byte_start":36514,"byte_end":36520,"line_start":6,"line_end":6,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/mod.rs","byte_start":36544,"byte_end":36550,"line_start":7,"line_end":7,"column_start":23,"column_end":29},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":17,"index":379},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51188,"byte_end":51198,"line_start":9,"line_end":9,"column_start":21,"column_end":31},"alias_span":null,"name":"CParameter","value":"","parent":{"krate":0,"index":408}},{"kind":"Use","ref_id":{"krate":17,"index":333},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51200,"byte_end":51210,"line_start":9,"line_end":9,"column_start":33,"column_end":43},"alias_span":null,"name":"DParameter","value":"","parent":{"krate":0,"index":408}},{"kind":"Use","ref_id":{"krate":17,"index":349},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51212,"byte_end":51220,"line_start":9,"line_end":9,"column_start":45,"column_end":53},"alias_span":null,"name":"InBuffer","value":"","parent":{"krate":0,"index":408}},{"kind":"Use","ref_id":{"krate":17,"index":356},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51222,"byte_end":51231,"line_start":9,"line_end":9,"column_start":55,"column_end":64},"alias_span":null,"name":"OutBuffer","value":"","parent":{"krate":0,"index":408}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15025,"byte_end":15036,"line_start":20,"line_end":20,"column_start":27,"column_end":38},"alias_span":null,"name":"copy_decode","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15038,"byte_end":15049,"line_start":20,"line_end":20,"column_start":40,"column_end":51},"alias_span":null,"name":"copy_encode","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15051,"byte_end":15061,"line_start":20,"line_end":20,"column_start":53,"column_end":63},"alias_span":null,"name":"decode_all","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15063,"byte_end":15073,"line_start":20,"line_end":20,"column_start":65,"column_end":75},"alias_span":null,"name":"encode_all","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15096,"byte_end":15103,"line_start":21,"line_end":21,"column_start":21,"column_end":28},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15127,"byte_end":15144,"line_start":22,"line_end":22,"column_start":23,"column_end":40},"alias_span":null,"name":"AutoFinishEncoder","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":15146,"byte_end":15153,"line_start":22,"line_end":22,"column_start":42,"column_end":49},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":17,"index":41},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":770,"byte_end":784,"line_start":34,"line_end":34,"column_start":20,"column_end":34},"alias_span":null,"name":"DEFAULT_COMPRESSION_LEVEL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":858,"byte_end":868,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"alias_span":null,"name":"decode_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":870,"byte_end":880,"line_start":37,"line_end":37,"column_start":37,"column_end":47},"alias_span":null,"name":"encode_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":882,"byte_end":889,"line_start":37,"line_end":37,"column_start":49,"column_end":56},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":891,"byte_end":898,"line_start":37,"line_end":37,"column_start":58,"column_end":65},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":0,"byte_end":1605,"line_start":1,"line_end":65,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":53},{"krate":0,"index":103},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524}],"decl_id":null,"docs":" Rust binding to the [zstd library][zstd].","sig":null,"attributes":[{"value":"/ Rust binding to the [zstd library][zstd].","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":50,"byte_end":74,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":75,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * An [encoder](stream/write/struct.Encoder.html) to compress data using zstd","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":79,"byte_end":159,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/   and send the output to another write.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":160,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/ * A [decoder](stream/read/struct.Decoder.html) to read input data from a `Read`","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":204,"byte_end":287,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/   and decompress it.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":288,"byte_end":312,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ * Convenient functions for common tasks.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":313,"byte_end":357,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":358,"byte_end":361,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":362,"byte_end":375,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":376,"byte_end":379,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":380,"byte_end":393,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ extern crate zstd;","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":394,"byte_end":416,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":417,"byte_end":420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":421,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":438,"byte_end":441,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":442,"byte_end":457,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ \t// Uncompress input and print the result.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":458,"byte_end":504,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ \tzstd::stream::copy_decode(io::stdin(), io::stdout()).unwrap();","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":505,"byte_end":572,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ }","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":573,"byte_end":578,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":579,"byte_end":586,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":587,"byte_end":590,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [zstd]: https://github.com/facebook/zstd","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":591,"byte_end":635,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":636,"byte_end":658,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"block","qualname":"::block","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":22},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Compress and decompress individual blocks.","sig":null,"attributes":[{"value":"/ Compress and decompress individual blocks.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1607,"byte_end":1653,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1654,"byte_end":1657,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These methods process all the input data at once.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1658,"byte_end":1711,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/ It is therefore best used with relatively small blocks","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1712,"byte_end":1770,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ (like small network packets).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1771,"byte_end":1804,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4873,"byte_end":4883,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Compressor","qualname":"::block::compressor::Compressor","value":"Compressor {  }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"decl_id":null,"docs":" Allows to compress independently multiple blocks of data.","sig":null,"attributes":[{"value":"/ Allows to compress independently multiple blocks of data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4640,"byte_end":4701,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4702,"byte_end":4705,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This reduces memory usage compared to calling `compress` multiple times.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4706,"byte_end":4782,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ The compressed blocks are still completely independent.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4783,"byte_end":4842,"line_start":9,"line_end":9,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5014,"byte_end":5017,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Compressor>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zstd compressor\n","sig":null,"attributes":[{"value":"/ Creates a new zstd compressor","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4969,"byte_end":5002,"line_start":17,"line_end":17,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5157,"byte_end":5166,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"with_dict","qualname":"<Compressor>::with_dict","value":"pub fn with_dict(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zstd compressor, using the given dictionary.\n","sig":null,"attributes":[{"value":"/ Creates a new zstd compressor, using the given dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5083,"byte_end":5145,"line_start":22,"line_end":22,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5598,"byte_end":5616,"line_start":36,"line_end":36,"column_start":12,"column_end":30},"name":"compress_to_buffer","qualname":"<Compressor>::compress_to_buffer","value":"pub fn compress_to_buffer(&mut Self, &[u8], &mut [u8], i32)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compress a single block of data to the given destination buffer.","sig":null,"attributes":[{"value":"/ Compress a single block of data to the given destination buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5299,"byte_end":5367,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5372,"byte_end":5375,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written, or an error if something happened","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5380,"byte_end":5454,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ (for instance if the destination buffer was too small).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5459,"byte_end":5518,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5523,"byte_end":5526,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5531,"byte_end":5586,"line_start":35,"line_end":35,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":6103,"byte_end":6111,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compressor>::compress","value":"pub fn compress(&mut Self, &[u8], i32) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses a block of data and returns the compressed result.","sig":null,"attributes":[{"value":"/ Compresses a block of data and returns the compressed result.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":5958,"byte_end":6023,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":6028,"byte_end":6031,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":6036,"byte_end":6091,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7116,"byte_end":7128,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"Decompressor","qualname":"::block::decompressor::Decompressor","value":"Decompressor {  }","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":" Allows to decompress independently multiple blocks of data.","sig":null,"attributes":[{"value":"/ Allows to decompress independently multiple blocks of data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":6939,"byte_end":7002,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7003,"byte_end":7006,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This reduces memory usage compared to calling `decompress` multiple times.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7007,"byte_end":7085,"line_start":8,"line_end":8,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7264,"byte_end":7267,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompressor>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zstd decompressor.\n","sig":null,"attributes":[{"value":"/ Creates a new zstd decompressor.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7216,"byte_end":7252,"line_start":16,"line_end":16,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7411,"byte_end":7420,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"with_dict","qualname":"<Decompressor>::with_dict","value":"pub fn with_dict(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zstd decompressor, using the given dictionary.\n","sig":null,"attributes":[{"value":"/ Creates a new zstd decompressor, using the given dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7335,"byte_end":7399,"line_start":21,"line_end":21,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7787,"byte_end":7807,"line_start":33,"line_end":33,"column_start":12,"column_end":32},"name":"decompress_to_buffer","qualname":"<Decompressor>::decompress_to_buffer","value":"pub fn decompress_to_buffer(&mut Self, &[u8], &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Deompress a single block of data to the given destination buffer.","sig":null,"attributes":[{"value":"/ Deompress a single block of data to the given destination buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7555,"byte_end":7624,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7629,"byte_end":7632,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written, or an error if something happened","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7637,"byte_end":7711,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ (for instance if the destination buffer was too small).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7716,"byte_end":7775,"line_start":32,"line_end":32,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":8303,"byte_end":8313,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompressor>::decompress","value":"pub fn decompress(&mut Self, &[u8], usize) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompress a block of data, and return the result in a `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Decompress a block of data, and return the result in a `Vec<u8>`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":8108,"byte_end":8177,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":8182,"byte_end":8185,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The decompressed data should be less than `capacity` bytes,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":8190,"byte_end":8253,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ or an error will be returned.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":8258,"byte_end":8291,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2213,"byte_end":2231,"line_start":21,"line_end":21,"column_start":8,"column_end":26},"name":"compress_to_buffer","qualname":"::block::compress_to_buffer","value":"pub fn compress_to_buffer(&[u8], &mut [u8], i32) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compresses a single block of data to the given destination buffer.","sig":null,"attributes":[{"value":"/ Compresses a single block of data to the given destination buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":1936,"byte_end":2006,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2007,"byte_end":2010,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written, or an error if something happened","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2011,"byte_end":2085,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ (for instance if the destination buffer was too small).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2086,"byte_end":2145,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2146,"byte_end":2149,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2150,"byte_end":2205,"line_start":20,"line_end":20,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2526,"byte_end":2534,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"compress","qualname":"::block::compress","value":"pub fn compress(&[u8], i32) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses a block of data and returns the compressed result.","sig":null,"attributes":[{"value":"/ Compresses a block of data and returns the compressed result.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2393,"byte_end":2458,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2459,"byte_end":2462,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2463,"byte_end":2518,"line_start":31,"line_end":31,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2848,"byte_end":2868,"line_start":40,"line_end":40,"column_start":8,"column_end":28},"name":"decompress_to_buffer","qualname":"::block::decompress_to_buffer","value":"pub fn decompress_to_buffer(&[u8], &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Deompress a single block of data to the given destination buffer.","sig":null,"attributes":[{"value":"/ Deompress a single block of data to the given destination buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2632,"byte_end":2701,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2702,"byte_end":2705,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written, or an error if something happened","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2706,"byte_end":2780,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ (for instance if the destination buffer was too small).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":2781,"byte_end":2840,"line_start":39,"line_end":39,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":3190,"byte_end":3200,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"decompress","qualname":"::block::decompress","value":"pub fn decompress(&[u8], usize) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses a block of data and returns the decompressed result.","sig":null,"attributes":[{"value":"/ Decompresses a block of data and returns the decompressed result.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":3011,"byte_end":3080,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":3081,"byte_end":3084,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The decompressed data should be less than `capacity` bytes,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":3085,"byte_end":3148,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ or an error will be returned.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/mod.rs","byte_start":3149,"byte_end":3182,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dict","qualname":"::dict","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":100}],"decl_id":null,"docs":" Train a dictionary from various sources.","sig":null,"attributes":[{"value":"/ Train a dictionary from various sources.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8768,"byte_end":8812,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8813,"byte_end":8816,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A dictionary can help improve the compression of small files.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8817,"byte_end":8882,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ The dictionary must be present during decompression,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8883,"byte_end":8939,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ but can be shared accross multiple \"similar\" files.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8940,"byte_end":8995,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":8996,"byte_end":8999,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Creating a dictionary using the `zstd` C library,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9000,"byte_end":9053,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ using the `zstd` command-line interface, using this library,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9054,"byte_end":9118,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ or using the `train` binary provided, should give the same result,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9119,"byte_end":9189,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ and are therefore completely compatible.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9190,"byte_end":9234,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9235,"byte_end":9238,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To use, see [`Encoder::with_dictionary`] or [`Decoder::with_dictionary`].","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9239,"byte_end":9316,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9317,"byte_end":9320,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Encoder::with_dictionary`]: ../struct.Encoder.html#method.with_dictionary","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9321,"byte_end":9400,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ [`Decoder::with_dictionary`]: ../struct.Decoder.html#method.with_dictionary","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9401,"byte_end":9480,"line_start":15,"line_end":15,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9653,"byte_end":9670,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"EncoderDictionary","qualname":"::dict::EncoderDictionary","value":"EncoderDictionary {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Prepared dictionary for compression\n","sig":null,"attributes":[{"value":"/ Prepared dictionary for compression","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9602,"byte_end":9641,"line_start":25,"line_end":25,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9860,"byte_end":9864,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"copy","qualname":"<EncoderDictionary>::copy","value":"pub fn copy(&[u8], i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a prepared dictionary for compression.","sig":null,"attributes":[{"value":"/ Creates a prepared dictionary for compression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9740,"byte_end":9790,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9795,"byte_end":9798,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This will copy the dictionary internally.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9803,"byte_end":9848,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10166,"byte_end":10169,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderDictionary>::new","value":"pub fn new(&'a [u8], i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create prepared dictionary for compression","sig":null,"attributes":[{"value":"/ Create prepared dictionary for compression","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10040,"byte_end":10086,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10091,"byte_end":10094,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10099,"byte_end":10154,"line_start":44,"line_end":44,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10383,"byte_end":10391,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"as_cdict","qualname":"<EncoderDictionary>::as_cdict","value":"pub fn as_cdict(&Self) -> &CDict","parent":null,"children":[],"decl_id":null,"docs":" Returns reference to `CDict` inner object\n","sig":null,"attributes":[{"value":"/ Returns reference to `CDict` inner object","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10326,"byte_end":10371,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10497,"byte_end":10514,"line_start":58,"line_end":58,"column_start":12,"column_end":29},"name":"DecoderDictionary","qualname":"::dict::DecoderDictionary","value":"DecoderDictionary {  }","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" Prepared dictionary for decompression\n","sig":null,"attributes":[{"value":"/ Prepared dictionary for decompression","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10444,"byte_end":10485,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10705,"byte_end":10709,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"copy","qualname":"<DecoderDictionary>::copy","value":"pub fn copy(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a prepared dictionary for decompression.","sig":null,"attributes":[{"value":"/ Create a prepared dictionary for decompression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10584,"byte_end":10635,"line_start":63,"line_end":63,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10640,"byte_end":10643,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This will copy the dictionary internally.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10648,"byte_end":10693,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10927,"byte_end":10930,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderDictionary>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create prepared dictionary for decompression\n","sig":null,"attributes":[{"value":"/ Create prepared dictionary for decompression","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10867,"byte_end":10915,"line_start":74,"line_end":74,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11113,"byte_end":11121,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"as_ddict","qualname":"<DecoderDictionary>::as_ddict","value":"pub fn as_ddict(&Self) -> &DDict","parent":null,"children":[],"decl_id":null,"docs":" Returns reference to `DDict` inner object\n","sig":null,"attributes":[{"value":"/ Returns reference to `DDict` inner object","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11056,"byte_end":11101,"line_start":81,"line_end":81,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11347,"byte_end":11362,"line_start":91,"line_end":91,"column_start":8,"column_end":23},"name":"from_continuous","qualname":"::dict::from_continuous","value":"pub fn from_continuous(&[u8], &[usize], usize) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Train a dictionary from a big continuous chunk of data.","sig":null,"attributes":[{"value":"/ Train a dictionary from a big continuous chunk of data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11174,"byte_end":11233,"line_start":87,"line_end":87,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11234,"byte_end":11237,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This is the most efficient way to train a dictionary,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11238,"byte_end":11295,"line_start":89,"line_end":89,"column_start":1,"column_end":58}},{"value":"/ since this is directly fed into `zstd`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":11296,"byte_end":11339,"line_start":90,"line_end":90,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12405,"byte_end":12417,"line_start":127,"line_end":127,"column_start":8,"column_end":20},"name":"from_samples","qualname":"::dict::from_samples","value":"pub fn from_samples<S: AsRef<[u8]>>(&[S], usize) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Train a dictionary from multiple samples.","sig":null,"attributes":[{"value":"/ Train a dictionary from multiple samples.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12062,"byte_end":12107,"line_start":118,"line_end":118,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12108,"byte_end":12111,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The samples will internaly be copied to a single continuous buffer,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12112,"byte_end":12183,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ so make sure you have enough memory available.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12184,"byte_end":12234,"line_start":121,"line_end":121,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12235,"byte_end":12238,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If you need to stretch your system's limits,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12239,"byte_end":12287,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/ [`from_continuous`] directly uses the given slice.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12288,"byte_end":12342,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12343,"byte_end":12346,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`from_continuous`]: ./fn.from_continuous.html","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12347,"byte_end":12397,"line_start":126,"line_end":126,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12814,"byte_end":12824,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"from_files","qualname":"::dict::from_files","value":"pub fn from_files<I, P>(I, usize) -> io::Result<Vec<u8>> where\nP: AsRef<path::Path>, I: IntoIterator<Item = P>","parent":null,"children":[],"decl_id":null,"docs":" Train a dict from a list of files.\n","sig":null,"attributes":[{"value":"/ Train a dict from a list of files.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":12768,"byte_end":12806,"line_start":139,"line_end":139,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":103},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":189},{"krate":0,"index":287},{"krate":0,"index":308},{"krate":0,"index":408},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":501}],"decl_id":null,"docs":" Compress and decompress Zstd streams.","sig":null,"attributes":[{"value":"/ Compress and decompress Zstd streams.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14626,"byte_end":14667,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14668,"byte_end":14671,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Zstd streams are the main way to compress and decompress data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14672,"byte_end":14738,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ They are compatible with the `zstd` command-line tool.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14739,"byte_end":14797,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14798,"byte_end":14801,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides both `Read` and `Write` interfaces to compressing and","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14802,"byte_end":14880,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ decompressing.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14881,"byte_end":14899,"line_start":7,"line_end":7,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::stream::read","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Implement pull-based [`Read`] trait for both compressing and decompressing.\n","sig":null,"attributes":[{"value":"/ Implement pull-based [`Read`] trait for both compressing and decompressing.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":17711,"byte_end":17790,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18252,"byte_end":18259,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::stream::read::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":138}],"decl_id":null,"docs":" A decoder that decompress input data from another `Read`.","sig":null,"attributes":[{"value":"/ A decoder that decompress input data from another `Read`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18077,"byte_end":18138,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18139,"byte_end":18142,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This allows to read a stream of compressed data","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18143,"byte_end":18194,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ (good for files or heavy network stream).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18195,"byte_end":18240,"line_start":21,"line_end":21,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18399,"byte_end":18406,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::stream::read::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" An encoder that compress input data from another `Read`.\n","sig":null,"attributes":[{"value":"/ An encoder that compress input data from another `Read`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18327,"byte_end":18387,"line_start":26,"line_end":26,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18563,"byte_end":18566,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(R) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18525,"byte_end":18551,"line_start":32,"line_end":32,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18837,"byte_end":18848,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<Decoder>::with_buffer","value":"pub fn with_buffer(R) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder around a `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder around a `BufRead`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18780,"byte_end":18825,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19087,"byte_end":19102,"line_start":48,"line_end":48,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Decoder>::with_dictionary","value":"pub fn with_dictionary(R, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, using an existing dictionary.","sig":null,"attributes":[{"value":"/ Creates a new decoder, using an existing dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18935,"byte_end":18991,"line_start":45,"line_end":45,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18996,"byte_end":18999,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The dictionary must be the same as the one used during compression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19004,"byte_end":19075,"line_start":47,"line_end":47,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19505,"byte_end":19517,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"single_frame","qualname":"<Decoder>::single_frame","value":"pub fn single_frame(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets this `Decoder` to stop after the first frame.","sig":null,"attributes":[{"value":"/ Sets this `Decoder` to stop after the first frame.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19359,"byte_end":19413,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19418,"byte_end":19421,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ By default, it keeps concatenating frames until EOF is reached.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19426,"byte_end":19493,"line_start":58,"line_end":58,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19763,"byte_end":19787,"line_start":67,"line_end":67,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Decoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(R, &DecoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, using an existing `DecoderDictionary`.","sig":null,"attributes":[{"value":"/ Creates a new decoder, using an existing `DecoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19602,"byte_end":19667,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19672,"byte_end":19675,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The dictionary must be the same as the one used during compression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19680,"byte_end":19751,"line_start":66,"line_end":66,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20153,"byte_end":20176,"line_start":81,"line_end":81,"column_start":12,"column_end":35},"name":"recommended_output_size","qualname":"<Decoder>::recommended_output_size","value":"pub fn recommended_output_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Recommendation for the size of the output buffer.\n","sig":null,"attributes":[{"value":"/ Recommendation for the size of the output buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20088,"byte_end":20141,"line_start":80,"line_end":80,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20306,"byte_end":20324,"line_start":86,"line_end":86,"column_start":12,"column_end":30},"name":"include_magicbytes","qualname":"<Decoder>::include_magicbytes","value":"pub fn include_magicbytes(&mut Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disabled expecting the 4-byte magic header\n","sig":null,"attributes":[{"value":"/ Enables or disabled expecting the 4-byte magic header","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20237,"byte_end":20294,"line_start":85,"line_end":85,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20808,"byte_end":20815,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Decoder>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquire a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquire a reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20747,"byte_end":20796,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21071,"byte_end":21078,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Decoder>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquire a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquire a mutable reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20871,"byte_end":20928,"line_start":106,"line_end":106,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20933,"byte_end":20936,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":20941,"byte_end":21013,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ this decoder is continued to be used.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21018,"byte_end":21059,"line_start":109,"line_end":109,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21320,"byte_end":21326,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"finish","qualname":"<Decoder>::finish","value":"pub fn finish(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Return the inner `Read`.","sig":null,"attributes":[{"value":"/ Return the inner `Read`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21146,"byte_end":21174,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21179,"byte_end":21182,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Calling `finish()` is not *required* after reading a stream -","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21187,"byte_end":21252,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ just use it if you need to get the `Read` back.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21257,"byte_end":21308,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21801,"byte_end":21804,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(R, i32) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21763,"byte_end":21789,"line_start":137,"line_end":137,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22094,"byte_end":22105,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<Encoder>::with_buffer","value":"pub fn with_buffer(R, i32) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder around a `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder around a `BufRead`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22037,"byte_end":22082,"line_start":146,"line_end":146,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22364,"byte_end":22379,"line_start":154,"line_end":154,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Encoder>::with_dictionary","value":"pub fn with_dictionary(R, i32, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder, using an existing dictionary.","sig":null,"attributes":[{"value":"/ Creates a new encoder, using an existing dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22212,"byte_end":22268,"line_start":151,"line_end":151,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22273,"byte_end":22276,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The dictionary must be the same as the one used during compression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22281,"byte_end":22352,"line_start":153,"line_end":153,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22848,"byte_end":22872,"line_start":170,"line_end":170,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Encoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(R, &EncoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder, using an existing `EncoderDictionary`.","sig":null,"attributes":[{"value":"/ Creates a new encoder, using an existing `EncoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22687,"byte_end":22752,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22757,"byte_end":22760,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The dictionary must be the same as the one used during compression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22765,"byte_end":22836,"line_start":169,"line_end":169,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23238,"byte_end":23261,"line_start":184,"line_end":184,"column_start":12,"column_end":35},"name":"recommended_output_size","qualname":"<Encoder>::recommended_output_size","value":"pub fn recommended_output_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Recommendation for the size of the output buffer.\n","sig":null,"attributes":[{"value":"/ Recommendation for the size of the output buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23173,"byte_end":23226,"line_start":183,"line_end":183,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23383,"byte_end":23390,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Encoder>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquire a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquire a reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23322,"byte_end":23371,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23646,"byte_end":23653,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Encoder>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquire a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquire a mutable reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23446,"byte_end":23503,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23508,"byte_end":23511,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23516,"byte_end":23588,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23593,"byte_end":23634,"line_start":196,"line_end":196,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23895,"byte_end":23901,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder>::finish","value":"pub fn finish(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Return the inner `Read`.","sig":null,"attributes":[{"value":"/ Return the inner `Read`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23721,"byte_end":23749,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23754,"byte_end":23757,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Calling `finish()` is not *required* after reading a stream -","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23762,"byte_end":23827,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ just use it if you need to get the `Read` back.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":23832,"byte_end":23883,"line_start":204,"line_end":204,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":189},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::stream::write","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":261},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":280},{"krate":0,"index":284}],"decl_id":null,"docs":" Implement push-based [`Write`] trait for both compressing and decompressing.\n","sig":null,"attributes":[{"value":"/ Implement push-based [`Write`] trait for both compressing and decompressing.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":24532,"byte_end":24612,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25272,"byte_end":25279,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::stream::write::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":217}],"decl_id":null,"docs":" An encoder that compress and forward data to another writer.","sig":null,"attributes":[{"value":"/ An encoder that compress and forward data to another writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":24927,"byte_end":24991,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":24992,"byte_end":24995,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This allows to compress a stream of data","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":24996,"byte_end":25040,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ (good for files or heavy network stream).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25041,"byte_end":25086,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25087,"byte_end":25090,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Don't forget to call [`finish()`] before dropping it!","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25091,"byte_end":25148,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25149,"byte_end":25152,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note: The zstd library has its own internal input buffer (~128kb).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25153,"byte_end":25223,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25224,"byte_end":25227,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`finish()`]: #method.finish","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25228,"byte_end":25260,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25461,"byte_end":25468,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::stream::write::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":" A decoder that decompress and forward data to another writer.\n","sig":null,"attributes":[{"value":"/ A decoder that decompress and forward data to another writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25384,"byte_end":25449,"line_start":36,"line_end":36,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25657,"byte_end":25674,"line_start":43,"line_end":43,"column_start":12,"column_end":29},"name":"AutoFinishEncoder","qualname":"::stream::write::AutoFinishEncoder","value":"AutoFinishEncoder {  }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" A wrapper around an `Encoder<W>` that finishes the stream on drop.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `Encoder<W>` that finishes the stream on drop.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25575,"byte_end":25645,"line_start":42,"line_end":42,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26261,"byte_end":26268,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AutoFinishEncoder>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26199,"byte_end":26249,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26545,"byte_end":26552,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AutoFinishEncoder>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26344,"byte_end":26402,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26407,"byte_end":26410,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26415,"byte_end":26487,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26492,"byte_end":26533,"line_start":70,"line_end":70,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27347,"byte_end":27350,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(W, i32) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27190,"byte_end":27216,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27221,"byte_end":27224,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ `level`: compression level (1-21).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27229,"byte_end":27267,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27272,"byte_end":27275,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27280,"byte_end":27335,"line_start":100,"line_end":100,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27734,"byte_end":27749,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Encoder>::with_dictionary","value":"pub fn with_dictionary(W, i32, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder, using an existing dictionary.","sig":null,"attributes":[{"value":"/ Creates a new encoder, using an existing dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27457,"byte_end":27513,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27518,"byte_end":27521,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ (Provides better compression ratio for small files,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27526,"byte_end":27581,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/ but requires the dictionary to be present during decompression.)","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27586,"byte_end":27654,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27659,"byte_end":27662,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27667,"byte_end":27722,"line_start":110,"line_end":110,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28281,"byte_end":28305,"line_start":127,"line_end":127,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Encoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(W, &EncoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder, using an existing prepared `EncoderDictionary`.","sig":null,"attributes":[{"value":"/ Creates a new encoder, using an existing prepared `EncoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28054,"byte_end":28128,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28133,"byte_end":28136,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ (Provides better compression ratio for small files,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28141,"byte_end":28196,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/ but requires the dictionary to be present during decompression.)","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28201,"byte_end":28269,"line_start":126,"line_end":126,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28791,"byte_end":28802,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"auto_finish","qualname":"<Encoder>::auto_finish","value":"pub fn auto_finish(Self) -> AutoFinishEncoder","parent":null,"children":[],"decl_id":null,"docs":" Returns a wrapper around `self` that will finish the stream on drop.","sig":null,"attributes":[{"value":"/ Returns a wrapper around `self` that will finish the stream on drop.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28605,"byte_end":28677,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28682,"byte_end":28685,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28690,"byte_end":28701,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28706,"byte_end":28709,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Panics on drop if an error happens when finishing the stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28714,"byte_end":28779,"line_start":143,"line_end":143,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29069,"byte_end":29078,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"on_finish","qualname":"<Encoder>::on_finish","value":"pub fn on_finish<F: 'static + FnMut(io::Result<W>) -> ()>(Self, F)\n-> AutoFinishEncoder","parent":null,"children":[],"decl_id":null,"docs":" Returns an encoder that will finish the stream on drop.","sig":null,"attributes":[{"value":"/ Returns an encoder that will finish the stream on drop.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28924,"byte_end":28983,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28988,"byte_end":28991,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Calls the given callback with the result from `finish()`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28996,"byte_end":29057,"line_start":152,"line_end":152,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29292,"byte_end":29299,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Encoder>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29230,"byte_end":29280,"line_start":160,"line_end":160,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29556,"byte_end":29563,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Encoder>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29355,"byte_end":29413,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29418,"byte_end":29421,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29426,"byte_end":29498,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29503,"byte_end":29544,"line_start":168,"line_end":168,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30187,"byte_end":30193,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" **Required**: Finishes the stream.","sig":null,"attributes":[{"value":"/ **Required**: Finishes the stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29631,"byte_end":29669,"line_start":173,"line_end":173,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29674,"byte_end":29677,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ You *need* to finish the stream when you're done writing, either with","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29682,"byte_end":29755,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ this method or with [`try_finish(self)`](#method.try_finish).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29760,"byte_end":29825,"line_start":176,"line_end":176,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29830,"byte_end":29833,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This returns the inner writer in case you need it.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29838,"byte_end":29892,"line_start":178,"line_end":178,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29897,"byte_end":29900,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ To get back `self` in case an error happened, use `try_finish`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29905,"byte_end":29972,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29977,"byte_end":29980,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you don't want (or can't) call `finish()` manually after","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":29985,"byte_end":30058,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/           writing your data, consider using `auto_finish()` to get an","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30063,"byte_end":30136,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/           `AutoFinishEncoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30141,"byte_end":30175,"line_start":184,"line_end":184,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30726,"byte_end":30736,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<Encoder>::try_finish","value":"pub fn try_finish(Self) -> Result<W, (Self, io::Error)>","parent":null,"children":[],"decl_id":null,"docs":" **Required**: Attempts to finish the stream.","sig":null,"attributes":[{"value":"/ **Required**: Attempts to finish the stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30280,"byte_end":30328,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30333,"byte_end":30336,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ You *need* to finish the stream when you're done writing, either with","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30341,"byte_end":30414,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ this method or with [`finish(self)`](#method.finish).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30419,"byte_end":30476,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30481,"byte_end":30484,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This returns the inner writer if the finish was successful, or the","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30489,"byte_end":30559,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ object plus an error if it wasn't.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30564,"byte_end":30602,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30607,"byte_end":30610,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ `write` on this object will panic after `try_finish` has been called,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30615,"byte_end":30688,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ even if it fails.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30693,"byte_end":30714,"line_start":198,"line_end":198,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31174,"byte_end":31183,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"do_finish","qualname":"<Encoder>::do_finish","value":"pub fn do_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to finish the stream.","sig":null,"attributes":[{"value":"/ Attemps to finish the stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":30981,"byte_end":31014,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31019,"byte_end":31022,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ You *need* to finish the stream when you're done writing, either with","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31027,"byte_end":31100,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ this method or with [`finish(self)`](#method.finish).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31105,"byte_end":31162,"line_start":210,"line_end":210,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31333,"byte_end":31355,"line_start":216,"line_end":216,"column_start":12,"column_end":34},"name":"recommended_input_size","qualname":"<Encoder>::recommended_input_size","value":"pub fn recommended_input_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a recommendation for the size of data to write at once.\n","sig":null,"attributes":[{"value":"/ Return a recommendation for the size of data to write at once.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31255,"byte_end":31321,"line_start":215,"line_end":215,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32007,"byte_end":32010,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(W) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31969,"byte_end":31995,"line_start":244,"line_end":244,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32307,"byte_end":32322,"line_start":253,"line_end":253,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Decoder>::with_dictionary","value":"pub fn with_dictionary(W, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, using an existing dictionary.","sig":null,"attributes":[{"value":"/ Creates a new decoder, using an existing dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32098,"byte_end":32154,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32159,"byte_end":32162,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ (Provides better compression ratio for small files,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32167,"byte_end":32222,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/ but requires the dictionary to be present during decompression.)","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32227,"byte_end":32295,"line_start":252,"line_end":252,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32803,"byte_end":32827,"line_start":264,"line_end":264,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Decoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(W, &DecoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, using an existing prepared `DecoderDictionary`.","sig":null,"attributes":[{"value":"/ Creates a new decoder, using an existing prepared `DecoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32576,"byte_end":32650,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32655,"byte_end":32658,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ (Provides better compression ratio for small files,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32663,"byte_end":32718,"line_start":262,"line_end":262,"column_start":5,"column_end":60}},{"value":"/ but requires the dictionary to be present during decompression.)","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32723,"byte_end":32791,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33196,"byte_end":33214,"line_start":277,"line_end":277,"column_start":12,"column_end":30},"name":"include_magicbytes","qualname":"<Decoder>::include_magicbytes","value":"pub fn include_magicbytes(&mut Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disabled expecting the 4-byte magic header\n","sig":null,"attributes":[{"value":"/ Enables or disabled expecting the 4-byte magic header","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33127,"byte_end":33184,"line_start":276,"line_end":276,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33699,"byte_end":33706,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Decoder>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33637,"byte_end":33687,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33963,"byte_end":33970,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Decoder>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33762,"byte_end":33820,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33825,"byte_end":33828,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33833,"byte_end":33905,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ this decoder is continued to be used.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":33910,"byte_end":33951,"line_start":300,"line_end":300,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34080,"byte_end":34090,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Decoder>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Write`.\n","sig":null,"attributes":[{"value":"/ Returns the inner `Write`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34038,"byte_end":34068,"line_start":305,"line_end":305,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34228,"byte_end":34250,"line_start":311,"line_end":311,"column_start":12,"column_end":34},"name":"recommended_input_size","qualname":"<Decoder>::recommended_input_size","value":"pub fn recommended_input_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a recommendation for the size of data to write at once.\n","sig":null,"attributes":[{"value":"/ Return a recommendation for the size of data to write at once.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34150,"byte_end":34216,"line_start":310,"line_end":310,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35038,"byte_end":35048,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"decode_all","qualname":"::stream::functions::decode_all","value":"pub fn decode_all<R: io::Read>(R) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompress from the given source as if using a `Decoder`.","sig":null,"attributes":[{"value":"/ Decompress from the given source as if using a `Decoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":34912,"byte_end":34973,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":34974,"byte_end":34977,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The input data must be in the zstd frame format.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":34978,"byte_end":35030,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35318,"byte_end":35329,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"copy_decode","qualname":"::stream::functions::copy_decode","value":"pub fn copy_decode<R, W>(R, W) -> io::Result<()> where R: io::Read,\nW: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Decompress from the given source as if using a `Decoder`.","sig":null,"attributes":[{"value":"/ Decompress from the given source as if using a `Decoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35188,"byte_end":35249,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35250,"byte_end":35253,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Decompressed data will be appended to `destination`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35254,"byte_end":35310,"line_start":16,"line_end":16,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":303},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35720,"byte_end":35730,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"encode_all","qualname":"::stream::functions::encode_all","value":"pub fn encode_all<R: io::Read>(R, i32) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compress all data from the given source as if using an `Encoder`.","sig":null,"attributes":[{"value":"/ Compress all data from the given source as if using an `Encoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35534,"byte_end":35603,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35604,"byte_end":35607,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Result will be in the zstd frame format.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35608,"byte_end":35652,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35653,"byte_end":35656,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35657,"byte_end":35712,"line_start":31,"line_end":31,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":36091,"byte_end":36102,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"copy_encode","qualname":"::stream::functions::copy_encode","value":"pub fn copy_encode<R, W>(R, W, i32) -> io::Result<()> where R: io::Read,\nW: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Compress all data from the given source as if using an `Encoder`.","sig":null,"attributes":[{"value":"/ Compress all data from the given source as if using an `Encoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35895,"byte_end":35964,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35965,"byte_end":35968,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Compressed data will be appended to `destination`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":35969,"byte_end":36023,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":36024,"byte_end":36027,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ A level of `0` uses zstd's default (currently `3`).","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/functions.rs","byte_start":36028,"byte_end":36083,"line_start":42,"line_end":42,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"zio","qualname":"::stream::zio","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":353},{"krate":0,"index":402},{"krate":0,"index":405}],"decl_id":null,"docs":" Wrappers around raw operations implementing `std::io::{Read, Write}`.\n","sig":null,"attributes":[{"value":"/ Wrappers around raw operations implementing `std::io::{Read, Write}`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/mod.rs","byte_start":36392,"byte_end":36465,"line_start":1,"line_end":1,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36948,"byte_end":36954,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Reader","qualname":"::stream::zio::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"decl_id":null,"docs":" Implements the [`Read`] API around an [`Operation`].","sig":null,"attributes":[{"value":"/ Implements the [`Read`] API around an [`Operation`].","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36681,"byte_end":36737,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36738,"byte_end":36741,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This can be used to wrap a raw in-memory operation in a read-focused API.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36742,"byte_end":36819,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36820,"byte_end":36823,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It can wrap either a compression or decompression operation, and pulls","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36824,"byte_end":36898,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ input data from a wrapped `Read`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":36899,"byte_end":36936,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37222,"byte_end":37225,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R, D>>::new","value":"pub fn new(R, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Reader`.","sig":null,"attributes":[{"value":"/ Creates a new `Reader`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37101,"byte_end":37128,"line_start":23,"line_end":23,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37133,"byte_end":37136,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ `reader` will be used to pull input data for the given operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37141,"byte_end":37210,"line_start":25,"line_end":25,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37505,"byte_end":37521,"line_start":37,"line_end":37,"column_start":12,"column_end":28},"name":"set_single_frame","qualname":"<Reader<R, D>>::set_single_frame","value":"pub fn set_single_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to stop after the first decoded frame.\n","sig":null,"attributes":[{"value":"/ Sets `self` to stop after the first decoded frame.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37439,"byte_end":37493,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37652,"byte_end":37665,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"operation_mut","qualname":"<Reader<R, D>>::operation_mut","value":"pub fn operation_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying operation.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37580,"byte_end":37640,"line_start":41,"line_end":41,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37797,"byte_end":37807,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<Reader<R, D>>::reader_mut","value":"pub fn reader_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37728,"byte_end":37785,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37928,"byte_end":37934,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"reader","qualname":"<Reader<R, D>>::reader","value":"pub fn reader(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37867,"byte_end":37916,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":38023,"byte_end":38033,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R, D>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner reader.\n","sig":null,"attributes":[{"value":"/ Returns the inner reader.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37982,"byte_end":38011,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42712,"byte_end":42718,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Writer","qualname":"::stream::zio::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Implements the [`Write`] API around an [`Operation`].","sig":null,"attributes":[{"value":"/ Implements the [`Write`] API around an [`Operation`].","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42445,"byte_end":42502,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42503,"byte_end":42506,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This can be used to wrap a raw in-memory operation in a write-focused API.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42507,"byte_end":42585,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42586,"byte_end":42589,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It can be used with either compression or decompression, and forwards the","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42590,"byte_end":42667,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ output to a wrapped `Write`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42668,"byte_end":42700,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43163,"byte_end":43166,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W, D>>::new","value":"pub fn new(W, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Writer`.","sig":null,"attributes":[{"value":"/ Creates a new `Writer`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43041,"byte_end":43068,"line_start":32,"line_end":32,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43073,"byte_end":43076,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ All output from the given operation will be forwarded to `writer`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43081,"byte_end":43151,"line_start":34,"line_end":34,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43809,"byte_end":43815,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer<W, D>>::finish","value":"pub fn finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Ends the stream.","sig":null,"attributes":[{"value":"/ Ends the stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43475,"byte_end":43495,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43500,"byte_end":43503,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This *must* be called after all data has been written to finish the","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43508,"byte_end":43579,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43584,"byte_end":43595,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43600,"byte_end":43603,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If you forget to call this and just drop the `Writer`, you *will* have","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43608,"byte_end":43682,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ an incomplete output.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43687,"byte_end":43712,"line_start":55,"line_end":55,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43717,"byte_end":43720,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Keep calling it until it returns `Ok(())`, then don't call it again.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":43725,"byte_end":43797,"line_start":57,"line_end":57,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46549,"byte_end":46559,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W, D>>::into_inner","value":"pub fn into_inner(Self) -> (W, D)","parent":null,"children":[],"decl_id":null,"docs":" Return the wrapped `Writer` and `Operation`.","sig":null,"attributes":[{"value":"/ Return the wrapped `Writer` and `Operation`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46372,"byte_end":46420,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46425,"byte_end":46428,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Careful: if you call this before calling [`Writer::finish()`], the","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46433,"byte_end":46503,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ output may be incomplete.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46508,"byte_end":46537,"line_start":137,"line_end":137,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46681,"byte_end":46687,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"writer","qualname":"<Writer<W, D>>::writer","value":"pub fn writer(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gives a reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Gives a reference to the inner writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46627,"byte_end":46669,"line_start":142,"line_end":142,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46797,"byte_end":46807,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"writer_mut","qualname":"<Writer<W, D>>::writer_mut","value":"pub fn writer_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gives a mutable reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Gives a mutable reference to the inner writer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46735,"byte_end":46785,"line_start":147,"line_end":147,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46924,"byte_end":46933,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"operation","qualname":"<Writer<W, D>>::operation","value":"pub fn operation(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Gives a reference to the inner operation.\n","sig":null,"attributes":[{"value":"/ Gives a reference to the inner operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46867,"byte_end":46912,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":47049,"byte_end":47062,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"operation_mut","qualname":"<Writer<W, D>>::operation_mut","value":"pub fn operation_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Gives a mutable reference to the inner operation.\n","sig":null,"attributes":[{"value":"/ Gives a mutable reference to the inner operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":46984,"byte_end":47037,"line_start":157,"line_end":157,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::stream::raw","value":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":460},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":475}],"decl_id":null,"docs":" Raw in-memory stream compression/decompression.","sig":null,"attributes":[{"value":"/ Raw in-memory stream compression/decompression.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":50921,"byte_end":50972,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":50973,"byte_end":50976,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module defines a `Decoder` and an `Encoder` to decode/encode streams","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":50977,"byte_end":51054,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ of data using buffers.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51055,"byte_end":51081,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51082,"byte_end":51085,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ They are mostly thin wrappers around `zstd_safe::{DCtx, CCtx}`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51086,"byte_end":51153,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51450,"byte_end":51459,"line_start":17,"line_end":17,"column_start":11,"column_end":20},"name":"Operation","qualname":"::stream::raw::Operation","value":"Operation","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" Represents an abstract compression/decompression operation.","sig":null,"attributes":[{"value":"/ Represents an abstract compression/decompression operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51320,"byte_end":51383,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51384,"byte_end":51387,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait covers both `Encoder` and `Decoder`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51388,"byte_end":51439,"line_start":16,"line_end":16,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51679,"byte_end":51682,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"run","qualname":"::stream::raw::Operation::run","value":"pub fn run(&mut Self, &mut InBuffer, &mut OutBuffer) -> io::Result<usize>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Performs a single step of this operation.","sig":null,"attributes":[{"value":"/ Performs a single step of this operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51466,"byte_end":51511,"line_start":18,"line_end":18,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51516,"byte_end":51519,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Should return a hint for the next input size.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51524,"byte_end":51573,"line_start":20,"line_end":20,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51578,"byte_end":51581,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok(0)`, it may indicate that a frame was just","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51586,"byte_end":51653,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/ finished.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51658,"byte_end":51671,"line_start":23,"line_end":23,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51992,"byte_end":52006,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"run_on_buffers","qualname":"::stream::raw::Operation::run_on_buffers","value":"pub fn run_on_buffers(&mut Self, &[u8], &mut [u8]) -> io::Result<Status>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Performs a single step of this operation.","sig":null,"attributes":[{"value":"/ Performs a single step of this operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51806,"byte_end":51851,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51856,"byte_end":51859,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is a comvenience wrapper around `Operation::run` if you don't","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51864,"byte_end":51934,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ want to deal with `InBuffer`/`OutBuffer`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":51939,"byte_end":51984,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52587,"byte_end":52592,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"flush","qualname":"::stream::raw::Operation::flush","value":"pub fn flush(&mut Self, &mut OutBuffer) -> io::Result<usize>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Flushes any internal buffer, if any.","sig":null,"attributes":[{"value":"/ Flushes any internal buffer, if any.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52408,"byte_end":52448,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52453,"byte_end":52456,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes still in the buffer.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52461,"byte_end":52513,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/ To flush entirely, keep calling until it returns `Ok(0)`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52518,"byte_end":52579,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52828,"byte_end":52834,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"reinit","qualname":"::stream::raw::Operation::reinit","value":"pub fn reinit(&mut Self) -> io::Result<()>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Prepares the operation for a new frame.","sig":null,"attributes":[{"value":"/ Prepares the operation for a new frame.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52704,"byte_end":52747,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52752,"byte_end":52755,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This is hopefully cheaper than creating a new operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52760,"byte_end":52820,"line_start":62,"line_end":62,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53133,"byte_end":53139,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"finish","qualname":"::stream::raw::Operation::finish","value":"pub fn finish(&mut Self, &mut OutBuffer, bool) -> io::Result<usize>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Finishes the operation, writing any footer if necessary.","sig":null,"attributes":[{"value":"/ Finishes the operation, writing any footer if necessary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52892,"byte_end":52952,"line_start":67,"line_end":67,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52957,"byte_end":52960,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes still to write.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":52965,"byte_end":53012,"line_start":69,"line_end":69,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53017,"byte_end":53020,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Keep calling this method until it returns `Ok(0)`,","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53025,"byte_end":53079,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/ and then don't ever call this method.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53084,"byte_end":53125,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53407,"byte_end":53411,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"NoOp","qualname":"::stream::raw::NoOp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy operation that just copies its input to the output.\n","sig":null,"attributes":[{"value":"/ Dummy operation that just copies its input to the output.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53334,"byte_end":53395,"line_start":84,"line_end":84,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53946,"byte_end":53952,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Status","qualname":"::stream::raw::Status","value":"Status { remaining, bytes_read, bytes_written }","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"decl_id":null,"docs":" Describes the result of an operation.\n","sig":null,"attributes":[{"value":"/ Describes the result of an operation.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53893,"byte_end":53934,"line_start":108,"line_end":108,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54049,"byte_end":54058,"line_start":113,"line_end":113,"column_start":9,"column_end":18},"name":"remaining","qualname":"::stream::raw::Status::remaining","value":"usize","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Number of bytes expected for next input.","sig":null,"attributes":[{"value":"/ Number of bytes expected for next input.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53959,"byte_end":54003,"line_start":110,"line_end":110,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54008,"byte_end":54011,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This is just a hint.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54016,"byte_end":54040,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":447},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54121,"byte_end":54131,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"bytes_read","qualname":"::stream::raw::Status::bytes_read","value":"usize","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Number of bytes read from the input.\n","sig":null,"attributes":[{"value":"/ Number of bytes read from the input.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54072,"byte_end":54112,"line_start":115,"line_end":115,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":448},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54196,"byte_end":54209,"line_start":119,"line_end":119,"column_start":9,"column_end":22},"name":"bytes_written","qualname":"::stream::raw::Status::bytes_written","value":"usize","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Number of bytes written to the output.\n","sig":null,"attributes":[{"value":"/ Number of bytes written to the output.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54145,"byte_end":54187,"line_start":118,"line_end":118,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":449},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54278,"byte_end":54285,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::stream::raw::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":451}],"decl_id":null,"docs":" An in-memory decoder for streams of data.\n","sig":null,"attributes":[{"value":"/ An in-memory decoder for streams of data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54221,"byte_end":54266,"line_start":122,"line_end":122,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54395,"byte_end":54398,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new() -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54357,"byte_end":54383,"line_start":128,"line_end":128,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54545,"byte_end":54560,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Decoder>::with_dictionary","value":"pub fn with_dictionary(&[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder initialized with the given dictionary.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder initialized with the given dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54469,"byte_end":54533,"line_start":133,"line_end":133,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54920,"byte_end":54944,"line_start":146,"line_end":146,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Decoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(&DecoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder, using an existing `DecoderDictionary`.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder, using an existing `DecoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54843,"byte_end":54908,"line_start":145,"line_end":145,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":55313,"byte_end":55326,"line_start":160,"line_end":160,"column_start":12,"column_end":25},"name":"set_parameter","qualname":"<Decoder>::set_parameter","value":"pub fn set_parameter(&mut Self, DParameter) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a decompression parameter for this decoder.\n","sig":null,"attributes":[{"value":"/ Sets a decompression parameter for this decoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":55249,"byte_end":55301,"line_start":159,"line_end":159,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56296,"byte_end":56303,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::stream::raw::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":466}],"decl_id":null,"docs":" An in-memory encoder for streams of data.\n","sig":null,"attributes":[{"value":"/ An in-memory encoder for streams of data.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56239,"byte_end":56284,"line_start":199,"line_end":199,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56413,"byte_end":56416,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(i32) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56375,"byte_end":56401,"line_start":205,"line_end":205,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56580,"byte_end":56595,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"with_dictionary","qualname":"<Encoder>::with_dictionary","value":"pub fn with_dictionary(i32, &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder initialized with the given dictionary.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder initialized with the given dictionary.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56504,"byte_end":56568,"line_start":210,"line_end":210,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":57064,"byte_end":57088,"line_start":228,"line_end":228,"column_start":12,"column_end":36},"name":"with_prepared_dictionary","qualname":"<Encoder>::with_prepared_dictionary","value":"pub fn with_prepared_dictionary<'b>(&EncoderDictionary) -> io::Result<Self>\nwhere 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using an existing `EncoderDictionary`.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder using an existing `EncoderDictionary`.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56988,"byte_end":57052,"line_start":227,"line_end":227,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":57455,"byte_end":57468,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"set_parameter","qualname":"<Encoder>::set_parameter","value":"pub fn set_parameter(&mut Self, CParameter) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a compression parameter for this encoder.\n","sig":null,"attributes":[{"value":"/ Sets a compression parameter for this encoder.","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":57393,"byte_end":57443,"line_start":241,"line_end":241,"column_start":5,"column_end":55}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4952,"byte_end":4962,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7197,"byte_end":7209,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9707,"byte_end":9724,"line_start":30,"line_end":30,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10012,"byte_end":10029,"line_start":41,"line_end":41,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10551,"byte_end":10568,"line_start":62,"line_end":62,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10839,"byte_end":10856,"line_start":73,"line_end":73,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18488,"byte_end":18495,"line_start":31,"line_end":31,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18754,"byte_end":18761,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19338,"byte_end":19345,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21408,"byte_end":21415,"line_start":123,"line_end":123,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21726,"byte_end":21733,"line_start":136,"line_end":136,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22011,"byte_end":22018,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22666,"byte_end":22673,"line_start":166,"line_end":166,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":24021,"byte_end":24028,"line_start":212,"line_end":212,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25917,"byte_end":25934,"line_start":51,"line_end":51,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26658,"byte_end":26675,"line_start":76,"line_end":76,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26906,"byte_end":26923,"line_start":85,"line_end":85,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27164,"byte_end":27171,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28033,"byte_end":28040,"line_start":122,"line_end":122,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31480,"byte_end":31487,"line_start":223,"line_end":223,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31943,"byte_end":31950,"line_start":243,"line_end":243,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32555,"byte_end":32562,"line_start":259,"line_end":259,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34333,"byte_end":34340,"line_start":316,"line_end":316,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37082,"byte_end":37088,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":38634,"byte_end":38640,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42984,"byte_end":42990,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":47445,"byte_end":47451,"line_start":175,"line_end":175,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53433,"byte_end":53437,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54334,"byte_end":54341,"line_start":127,"line_end":127,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54825,"byte_end":54832,"line_start":144,"line_end":144,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":55522,"byte_end":55529,"line_start":168,"line_end":168,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56352,"byte_end":56359,"line_start":204,"line_end":204,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56970,"byte_end":56977,"line_start":226,"line_end":226,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":57668,"byte_end":57675,"line_start":250,"line_end":250,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":668,"byte_end":673,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":683,"byte_end":687,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":53}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/lib.rs","byte_start":697,"byte_end":703,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":103}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14909,"byte_end":14913,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14923,"byte_end":14928,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":189}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14954,"byte_end":14957,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/mod.rs","byte_start":14993,"byte_end":14996,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":408}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/compressor.rs","byte_start":4952,"byte_end":4962,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/block/decompressor.rs","byte_start":7197,"byte_end":7209,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":9707,"byte_end":9724,"line_start":30,"line_end":30,"column_start":6,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10012,"byte_end":10029,"line_start":41,"line_end":41,"column_start":10,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10551,"byte_end":10568,"line_start":62,"line_end":62,"column_start":6,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/dict.rs","byte_start":10839,"byte_end":10856,"line_start":73,"line_end":73,"column_start":10,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18488,"byte_end":18495,"line_start":31,"line_end":31,"column_start":15,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":18754,"byte_end":18761,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":19338,"byte_end":19345,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21408,"byte_end":21415,"line_start":123,"line_end":123,"column_start":27,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":21726,"byte_end":21733,"line_start":136,"line_end":136,"column_start":15,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22011,"byte_end":22018,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":22666,"byte_end":22673,"line_start":166,"line_end":166,"column_start":22,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/read/mod.rs","byte_start":24021,"byte_end":24028,"line_start":212,"line_end":212,"column_start":27,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":25917,"byte_end":25934,"line_start":51,"line_end":51,"column_start":20,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26658,"byte_end":26675,"line_start":76,"line_end":76,"column_start":25,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":222},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":26906,"byte_end":26923,"line_start":85,"line_end":85,"column_start":26,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":27164,"byte_end":27171,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":28033,"byte_end":28040,"line_start":122,"line_end":122,"column_start":20,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31480,"byte_end":31487,"line_start":223,"line_end":223,"column_start":30,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":214},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":31943,"byte_end":31950,"line_start":243,"line_end":243,"column_start":16,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":32555,"byte_end":32562,"line_start":259,"line_end":259,"column_start":20,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/write/mod.rs","byte_start":34333,"byte_end":34340,"line_start":316,"line_end":316,"column_start":26,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":37082,"byte_end":37088,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/reader.rs","byte_start":38634,"byte_end":38640,"line_start":82,"line_end":82,"column_start":21,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":42984,"byte_end":42990,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/zio/writer.rs","byte_start":47445,"byte_end":47451,"line_start":175,"line_end":175,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":53433,"byte_end":53437,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54334,"byte_end":54341,"line_start":127,"line_end":127,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":54825,"byte_end":54832,"line_start":144,"line_end":144,"column_start":10,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":55522,"byte_end":55529,"line_start":168,"line_end":168,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":449},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56352,"byte_end":56359,"line_start":204,"line_end":204,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":56970,"byte_end":56977,"line_start":226,"line_end":226,"column_start":10,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/registry/src/github.com-1ecc6299db9ec823/zstd-0.6.1+zstd.1.4.9/src/stream/raw.rs","byte_start":57668,"byte_end":57675,"line_start":250,"line_end":250,"column_start":24,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":464},"to":{"krate":0,"index":435}}]}