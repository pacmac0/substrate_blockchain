{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session","program":"/Users/pacmac/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","pallet_session","--edition=2018","/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"sp-trie\"","--cfg","feature=\"std\"","-C","metadata=a1cd8f4f5c857966","-C","extra-filename=-a1cd8f4f5c857966","--out-dir","/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps","-L","dependency=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps","--extern","frame_support=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libframe_support-57fc84aca8d280a0.rmeta","--extern","frame_system=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libframe_system-0c1c09ad8fa0ef13.rmeta","--extern","impl_trait_for_tuples=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libimpl_trait_for_tuples-d5a17318ade3cfae.dylib","--extern","pallet_timestamp=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libpallet_timestamp-4a9adf40e4b40b59.rmeta","--extern","codec=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libparity_scale_codec-b92894275540896f.rmeta","--extern","sp_core=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_core-42483b93bdb2a363.rmeta","--extern","sp_io=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_io-7fcb42df6dbb0d80.rmeta","--extern","sp_runtime=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_runtime-eb44b0d2edeaf46f.rmeta","--extern","sp_session=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_session-40baf232a8318ce9.rmeta","--extern","sp_staking=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_staking-45c6419c01f2568d.rmeta","--extern","sp_std=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_std-f4581d680faf3368.rmeta","--extern","sp_trie=/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libsp_trie-224a3cd0bc08b483.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/pacmac/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/pacmac/Documents/GitHub/Blockchain/substarte_blockchain/substrate-node-template/runtime/target/rls/debug/deps/libpallet_session-a1cd8f4f5c857966.rmeta"},"prelude":{"crate_id":{"name":"pallet_session","disambiguator":[12566918949049166314,13160119103455999830]},"crate_root":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src","external_crates":[{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":17,"id":{"name":"frame_support","disambiguator":[11438153476264462017,13436504427752020279]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":18,"id":{"name":"sp_tracing","disambiguator":[9758860789820479742,12426046740471771298]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","num":19,"id":{"name":"sp_std","disambiguator":[16442692122499640440,8810526438156151152]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":20,"id":{"name":"parity_scale_codec","disambiguator":[1767991425211890163,15275787332498390458]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":21,"id":{"name":"parity_scale_codec_derive","disambiguator":[14391365653870212805,14531539914271637304]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":22,"id":{"name":"arrayvec","disambiguator":[12960634023296680648,17415489032434322152]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":23,"id":{"name":"byte_slice_cast","disambiguator":[12767616832528429109,12474609597308058198]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":24,"id":{"name":"serde","disambiguator":[16826947316395387857,10573098306872222580]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":25,"id":{"name":"serde_derive","disambiguator":[5531186200961816895,12541417986372511176]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":26,"id":{"name":"tracing_core","disambiguator":[1989091935625718327,13045531030797619541]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":27,"id":{"name":"lazy_static","disambiguator":[13115968408465587564,1564445060253929076]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":28,"id":{"name":"tracing","disambiguator":[15500519814739148565,4882327951270382694]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":29,"id":{"name":"cfg_if","disambiguator":[8420289586558118857,13192060884594697870]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":30,"id":{"name":"log","disambiguator":[2967167718459907316,3542955882840215765]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":31,"id":{"name":"value_bag","disambiguator":[4973090163791107749,2378575398713814580]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":32,"id":{"name":"ctor","disambiguator":[13801540684992441266,12684247081382462336]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":33,"id":{"name":"pin_project_lite","disambiguator":[15143776299797858024,11359249630212446384]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":34,"id":{"name":"tracing_subscriber","disambiguator":[1384075354151478511,6526665536902851213]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":35,"id":{"name":"regex","disambiguator":[17329214781691102306,3303982888810804731]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":36,"id":{"name":"regex_syntax","disambiguator":[1782991836199340974,9730587620914123596]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":37,"id":{"name":"aho_corasick","disambiguator":[4353787273838346968,16997277674085474888]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":38,"id":{"name":"memchr","disambiguator":[12643267687796818963,3381751836451754718]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":39,"id":{"name":"matchers","disambiguator":[3335326530563280197,7116678892109879551]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":40,"id":{"name":"regex_automata","disambiguator":[8037639159418705028,11441756386807335126]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":41,"id":{"name":"byteorder","disambiguator":[16210398844952928618,4459178990000196533]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":42,"id":{"name":"ansi_term","disambiguator":[2625916553709521076,10633437412448717427]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":43,"id":{"name":"tracing_log","disambiguator":[14509944052322176161,701170872002718172]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":44,"id":{"name":"serde_json","disambiguator":[418683054938841291,17262678003799807208]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":45,"id":{"name":"itoa","disambiguator":[8283340178666436744,2389455354258136007]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":46,"id":{"name":"ryu","disambiguator":[2256179967856321882,1189585327048602005]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":47,"id":{"name":"tracing_serde","disambiguator":[11312939593935085030,6658482993225083830]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":48,"id":{"name":"sharded_slab","disambiguator":[12289271401969280043,1774023170197551552]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":49,"id":{"name":"thread_local","disambiguator":[6375400027505465132,13835737997579883059]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":50,"id":{"name":"once_cell","disambiguator":[3505876016065507028,5902538133805965302]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":51,"id":{"name":"parking_lot","disambiguator":[4149067892003332680,7351687416961319175]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":52,"id":{"name":"instant","disambiguator":[17840944962997730082,8535540538787943651]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":53,"id":{"name":"lock_api","disambiguator":[11802992542491599879,14367420795501565427]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":54,"id":{"name":"scopeguard","disambiguator":[4536674605428346847,6656458858206595489]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":55,"id":{"name":"parking_lot_core","disambiguator":[8985513209914234178,7710832198072591281]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":56,"id":{"name":"smallvec","disambiguator":[10576644813065843749,17909005825861714744]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":57,"id":{"name":"libc","disambiguator":[6962437834356623677,5600224408789478668]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":58,"id":{"name":"chrono","disambiguator":[12242318486283647953,14307348441162268285]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":59,"id":{"name":"num_integer","disambiguator":[4603701516894603577,1651657235175545604]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":60,"id":{"name":"num_traits","disambiguator":[8783356709851879031,2577628248416880039]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":61,"id":{"name":"sp_core","disambiguator":[8858984443603993419,953193597239331335]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":62,"id":{"name":"sp_runtime_interface","disambiguator":[9348040414314727763,18073157924069151006]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":63,"id":{"name":"sp_wasm_interface","disambiguator":[9224862577047329291,7131296122232801932]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":64,"id":{"name":"impl_trait_for_tuples","disambiguator":[4827202601683011720,14268833080681959460]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":65,"id":{"name":"wasmi","disambiguator":[12543548289130508843,553483088293407268]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":66,"id":{"name":"memory_units","disambiguator":[12315645129760716651,7064932104521634840]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":67,"id":{"name":"parity_wasm","disambiguator":[5958725929212368874,7420205552885013021]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":68,"id":{"name":"wasmi_validation","disambiguator":[13403420978710821984,14836719267099775724]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":69,"id":{"name":"num_rational","disambiguator":[1291827010577655577,5046482394365817407]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":70,"id":{"name":"num_bigint","disambiguator":[10703554515388123785,7643425795932955119]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":71,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[8517899563067862381,4570219011772773436]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":72,"id":{"name":"sp_externalities","disambiguator":[14356257755370224482,17011218972206296411]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":73,"id":{"name":"sp_storage","disambiguator":[16817858191616452079,1289739215516248415]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":74,"id":{"name":"sp_debug_derive","disambiguator":[15176048117391774789,12046276437241237045]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":75,"id":{"name":"ref_cast","disambiguator":[399290781737517271,2456906132718403500]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":76,"id":{"name":"ref_cast_impl","disambiguator":[14736224918815154880,7701940021341717713]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":77,"id":{"name":"impl_serde","disambiguator":[15292100013086732542,7288751381240915063]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":78,"id":{"name":"environmental","disambiguator":[10329994600075434384,11873840793369030397]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":79,"id":{"name":"primitive_types","disambiguator":[12267905113120867567,2460140002630891147]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":80,"id":{"name":"fixed_hash","disambiguator":[4621208073188629073,15548167611435897040]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":81,"id":{"name":"static_assertions","disambiguator":[2943148363622726028,7435026422091694625]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":82,"id":{"name":"rustc_hex","disambiguator":[5465501055094163987,90524581376250443]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":83,"id":{"name":"rand","disambiguator":[3333656609119378337,4438082011922660079]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":84,"id":{"name":"rand_core","disambiguator":[1174686240783682439,344337091083107528]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":85,"id":{"name":"getrandom","disambiguator":[13291334614214461397,16372411958604548635]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":86,"id":{"name":"rand_chacha","disambiguator":[12941265120827651880,16088129785601187968]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":87,"id":{"name":"ppv_lite86","disambiguator":[4440803614857125080,26177936711229669]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":88,"id":{"name":"uint","disambiguator":[15950497002889872324,2071491388779357519]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":89,"id":{"name":"hex","disambiguator":[15231462397986274344,11854266882444173755]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":90,"id":{"name":"crunchy","disambiguator":[8141959633869857462,16960307303779072845]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":91,"id":{"name":"impl_codec","disambiguator":[2811571913464281942,13456710085809115268]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":92,"id":{"name":"sha2","disambiguator":[15342141046547930696,4590626145542071043]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":93,"id":{"name":"block_buffer","disambiguator":[12086720999423016503,1265721854948173841]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":94,"id":{"name":"generic_array","disambiguator":[9318573200607604099,14278596414469618145]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":95,"id":{"name":"typenum","disambiguator":[1876291367663037158,1006871904938973567]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":96,"id":{"name":"digest","disambiguator":[13104716967063353673,14056173549483279061]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":97,"id":{"name":"opaque_debug","disambiguator":[3760941980258284507,13363070592318313590]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":98,"id":{"name":"cpufeatures","disambiguator":[18261602552864390610,1596426756115977568]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":99,"id":{"name":"tiny_keccak","disambiguator":[14214906347306450986,16286820975193136427]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":100,"id":{"name":"rand","disambiguator":[5667332885655114264,1496531498969353823]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":101,"id":{"name":"rand_core","disambiguator":[4254090539053831558,15237545821711498939]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":102,"id":{"name":"getrandom","disambiguator":[340492168579472586,5498098788973778632]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":103,"id":{"name":"rand_chacha","disambiguator":[9055971179354451194,14114326563640830269]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":104,"id":{"name":"rand_pcg","disambiguator":[1153620098420613507,9928418328479580543]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":105,"id":{"name":"base58","disambiguator":[11048184139348543421,7626695997904252758]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":106,"id":{"name":"zeroize","disambiguator":[16595334319954845141,17244940034750437990]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":107,"id":{"name":"zeroize_derive","disambiguator":[12193881719609836433,17491055281298236194]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":108,"id":{"name":"secrecy","disambiguator":[9327495495749490769,3095053074861045128]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":109,"id":{"name":"ed25519_dalek","disambiguator":[10478189049820165315,15830920300665791711]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":110,"id":{"name":"ed25519","disambiguator":[10558016507930136318,13183781865275366896]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":111,"id":{"name":"signature","disambiguator":[5711105986857028058,1595098239164363144]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":112,"id":{"name":"curve25519_dalek","disambiguator":[7667311124732274013,3055041941399853649]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":113,"id":{"name":"subtle","disambiguator":[7247554391044243528,3808581533720551095]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":114,"id":{"name":"substrate_bip39","disambiguator":[6253693081226477074,5946486549101511630]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":115,"id":{"name":"sha2","disambiguator":[14170310830697317994,15566591785185095190]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":116,"id":{"name":"block_buffer","disambiguator":[8130303689206572846,13506124794372458713]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":117,"id":{"name":"block_padding","disambiguator":[12207770727577334527,3209518621099042005]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":118,"id":{"name":"byte_tools","disambiguator":[17451983779308160660,17276174421303433404]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":119,"id":{"name":"generic_array","disambiguator":[16486723841456852545,5184047210148361580]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":120,"id":{"name":"fake_simd","disambiguator":[3853911612924604709,11062493236370635314]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":121,"id":{"name":"opaque_debug","disambiguator":[6363660152129911525,5449357523450236181]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":122,"id":{"name":"digest","disambiguator":[17697047172328457315,18438476057539731404]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":123,"id":{"name":"hmac","disambiguator":[8671694582533643601,13676860184887019846]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":124,"id":{"name":"crypto_mac","disambiguator":[15592151404126950894,2476342125613167707]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":125,"id":{"name":"subtle","disambiguator":[784687651428157661,16588398041300054037]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":126,"id":{"name":"pbkdf2","disambiguator":[2543258970041171974,8288691447657557164]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":127,"id":{"name":"schnorrkel","disambiguator":[15299476166519421306,8008587558629772013]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":128,"id":{"name":"arrayref","disambiguator":[7520783480140541333,5689448429750846476]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":129,"id":{"name":"curve25519_dalek","disambiguator":[16353332520279260015,6718841375750091148]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":130,"id":{"name":"merlin","disambiguator":[10821348126619016958,1750596866839252934]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":131,"id":{"name":"keccak","disambiguator":[9457670062259624150,17725115860849057729]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":132,"id":{"name":"arrayvec","disambiguator":[6943948952273743619,9774688430899731877]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":133,"id":{"name":"bip39","disambiguator":[7057197355252485538,2232417977378787028]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":134,"id":{"name":"thiserror","disambiguator":[7330545419207132697,12598389648439073832]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":135,"id":{"name":"thiserror_impl","disambiguator":[17544407238714075304,1670502451913537385]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":136,"id":{"name":"rustc_hash","disambiguator":[6714153601216533071,18184083294875240397]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":137,"id":{"name":"anyhow","disambiguator":[10033419795247231053,12527511650782264981]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":138,"id":{"name":"unicode_normalization","disambiguator":[6523591217676822276,387013127763064503]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":139,"id":{"name":"tinyvec","disambiguator":[3262269768921595294,15449042542358930640]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":140,"id":{"name":"tinyvec_macros","disambiguator":[12897220501665526758,4535004255344259336]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":141,"id":{"name":"hmac","disambiguator":[17447335627006773771,4995676994001418616]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":142,"id":{"name":"crypto_mac","disambiguator":[9893994485015878886,4473608057734114256]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":143,"id":{"name":"pbkdf2","disambiguator":[11761141117251362664,1922524249992076734]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":144,"id":{"name":"secp256k1","disambiguator":[16502070024827554995,7894300439114408316]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":145,"id":{"name":"hmac_drbg","disambiguator":[11319453600987134600,17647659987313566953]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":146,"id":{"name":"hash_db","disambiguator":[10632484055538319579,11483199677631481365]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":147,"id":{"name":"hash256_std_hasher","disambiguator":[919524812652875569,10375262935122547514]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":148,"id":{"name":"parity_util_mem","disambiguator":[7302712599762474605,17025123116370562340]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":149,"id":{"name":"parity_util_mem_derive","disambiguator":[11400550118676640777,14711304747125968935]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":150,"id":{"name":"hashbrown","disambiguator":[11108815998300341232,11403279513464274058]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":151,"id":{"name":"ahash","disambiguator":[12445118883673089441,5139319268240202550]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":152,"id":{"name":"dyn_clonable","disambiguator":[6251207251005199344,3602050040177691668]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":153,"id":{"name":"dyn_clone","disambiguator":[10619664580432957125,1369179012616864162]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":154,"id":{"name":"dyn_clonable_impl","disambiguator":[12708604059790443794,18334864168628323369]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":155,"id":{"name":"blake2_rfc","disambiguator":[16678008188988807864,14252629015429369601]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":156,"id":{"name":"arrayvec","disambiguator":[17118909798435834860,8641127238864900773]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":157,"id":{"name":"nodrop","disambiguator":[17082416567148204655,15985020192483950398]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":158,"id":{"name":"constant_time_eq","disambiguator":[6885194107320058549,4611741201110586889]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":159,"id":{"name":"twox_hash","disambiguator":[13934093291319510251,1856265752168681066]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":160,"id":{"name":"cfg_if","disambiguator":[4114278614127350093,16701594273643551316]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":161,"id":{"name":"futures","disambiguator":[2215660937269035651,16890674312377580348]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":162,"id":{"name":"futures_core","disambiguator":[7645361618375849849,3417802662741056248]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":163,"id":{"name":"futures_util","disambiguator":[5218621647048234378,16034717113775230023]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":164,"id":{"name":"pin_utils","disambiguator":[9239567482944815347,5596304972902726585]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":165,"id":{"name":"futures_macro","disambiguator":[166126389772025354,8610668884814519194]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":166,"id":{"name":"futures_task","disambiguator":[10599856611869864387,5189614415557241573]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":167,"id":{"name":"futures_sink","disambiguator":[12742102116825947120,6201307724785464928]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":168,"id":{"name":"futures_channel","disambiguator":[18178996761232119208,13584496714364126246]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":169,"id":{"name":"slab","disambiguator":[12148241200695695922,13996667853672907958]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":170,"id":{"name":"futures_io","disambiguator":[803233781335628036,252501454491939782]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":171,"id":{"name":"futures_executor","disambiguator":[6684642321597688059,16902165737184563469]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":172,"id":{"name":"num_cpus","disambiguator":[13947526789145273641,10608103218024300753]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":173,"id":{"name":"paste","disambiguator":[17327219699031936388,2103738894932757748]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":174,"id":{"name":"sp_state_machine","disambiguator":[16925840074543579808,2183690162481256036]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":175,"id":{"name":"sp_trie","disambiguator":[8749148100265875471,11501388757392254215]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":176,"id":{"name":"trie_db","disambiguator":[9422744765957970821,13574798325075268450]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":177,"id":{"name":"trie_root","disambiguator":[2541468871538482452,17186375224834198678]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":178,"id":{"name":"memory_db","disambiguator":[8532507464073840147,14890764445885305843]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":179,"id":{"name":"sp_panic_handler","disambiguator":[1534288276601998587,12370871708416901083]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":180,"id":{"name":"backtrace","disambiguator":[14260859381688472185,4147624848849272058]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":181,"id":{"name":"rustc_demangle","disambiguator":[14516211882743875538,2413711411728119265]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":182,"id":{"name":"addr2line","disambiguator":[9468131681784643810,5735088598000919035]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":183,"id":{"name":"gimli","disambiguator":[5587800922270706537,5265663207008198182]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":184,"id":{"name":"object","disambiguator":[6164965286625045686,14434113009595131830]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":185,"id":{"name":"sp_io","disambiguator":[6494925765885550789,3664319308678594514]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":186,"id":{"name":"sp_keystore","disambiguator":[15745976237705555673,15161960954873751280]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":187,"id":{"name":"async_trait","disambiguator":[9640226695314027973,4451110150745529058]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":188,"id":{"name":"derive_more","disambiguator":[16247202198338179889,13322547842039147425]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":189,"id":{"name":"frame_metadata","disambiguator":[4128581820083024566,1550789863063402312]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":190,"id":{"name":"sp_runtime","disambiguator":[15838949983498522249,2193600284906721979]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":191,"id":{"name":"sp_application_crypto","disambiguator":[2123134807585229003,5464682130133436566]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":192,"id":{"name":"sp_arithmetic","disambiguator":[17710202733504330442,761377526585025863]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":193,"id":{"name":"integer_sqrt","disambiguator":[13545843828806147228,9889441301404251607]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":194,"id":{"name":"either","disambiguator":[4045095897772998165,3810862024063146398]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":195,"id":{"name":"sp_inherents","disambiguator":[9725199983467312187,17807254877350568386]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":196,"id":{"name":"sp_staking","disambiguator":[5014926713940570146,7026821026427736343]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":197,"id":{"name":"frame_support_procedural","disambiguator":[13229666601902053100,3337563401894589788]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":198,"id":{"name":"bitflags","disambiguator":[17264092164029187656,10451656066093622040]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":199,"id":{"name":"frame_system","disambiguator":[443380647466158037,15086740428883155991]}},{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","num":200,"id":{"name":"sp_version","disambiguator":[17189607272392117019,3432207198314986590]}}],"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":686,"byte_end":31201,"line_start":18,"line_end":881,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5611,"byte_end":5621,"line_start":134,"line_end":134,"column_start":18,"column_end":28},"alias_span":null,"name":"WeightInfo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":686,"byte_end":31201,"line_start":18,"line_end":881,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":258},{"krate":0,"index":271},{"krate":0,"index":288},{"krate":0,"index":309},{"krate":0,"index":334},{"krate":0,"index":363},{"krate":0,"index":396},{"krate":0,"index":433},{"krate":0,"index":474},{"krate":0,"index":519},{"krate":0,"index":568},{"krate":0,"index":621},{"krate":0,"index":678},{"krate":0,"index":739},{"krate":0,"index":804},{"krate":0,"index":873},{"krate":0,"index":946},{"krate":0,"index":1023},{"krate":0,"index":1104},{"krate":0,"index":1189},{"krate":0,"index":1278},{"krate":0,"index":1371},{"krate":0,"index":1468},{"krate":0,"index":1569},{"krate":0,"index":1674},{"krate":0,"index":1783},{"krate":0,"index":1896},{"krate":0,"index":2013},{"krate":0,"index":2134},{"krate":0,"index":2259},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2417},{"krate":0,"index":2426},{"krate":0,"index":2432},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2672},{"krate":0,"index":2677},{"krate":0,"index":2547},{"krate":0,"index":2732},{"krate":0,"index":2679},{"krate":0,"index":2688},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2564},{"krate":0,"index":2568},{"krate":0,"index":2572},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2600},{"krate":0,"index":2604},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2622},{"krate":0,"index":2626},{"krate":0,"index":2630},{"krate":0,"index":2639},{"krate":0,"index":2643},{"krate":0,"index":2647},{"krate":0,"index":2739},{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2758},{"krate":0,"index":2764},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2766},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2840},{"krate":0,"index":2844},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2860},{"krate":0,"index":2798},{"krate":0,"index":2863},{"krate":0,"index":2874},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2895},{"krate":0,"index":2800},{"krate":0,"index":2915},{"krate":0,"index":2923},{"krate":0,"index":2931},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2834},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2837},{"krate":0,"index":209},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":254}],"decl_id":null,"docs":" # Session Module","sig":null,"attributes":[{"value":"/ # Session Module","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":686,"byte_end":706,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":707,"byte_end":710,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The Session module allows validators to manage their session keys, provides a function for","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":711,"byte_end":805,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ changing the session length, and handles session rotation.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":806,"byte_end":868,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":869,"byte_end":872,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - [`Config`]","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":873,"byte_end":889,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/ - [`Call`]","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":890,"byte_end":904,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ - [`Module`]","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":905,"byte_end":921,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":922,"byte_end":925,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":926,"byte_end":941,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":942,"byte_end":945,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Terminology","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":946,"byte_end":965,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/ <!-- Original author of paragraph: @gavofyork -->","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":966,"byte_end":1019,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1020,"byte_end":1023,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - **Session:** A session is a period of time that has a constant set of validators. Validators","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1024,"byte_end":1122,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/   can only join or exit the validator set at a session change. It is measured in block numbers.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1123,"byte_end":1222,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/   The block where a session is ended is determined by the `ShouldEndSession` trait. When the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1223,"byte_end":1319,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/   session is ending, a new validator set can be chosen by `OnSessionEnding` implementations.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1320,"byte_end":1416,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1417,"byte_end":1420,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ - **Session key:** A session key is actually several keys kept together that provide the various","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1421,"byte_end":1521,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/   signing functions required by network authorities/validators in pursuit of their duties.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1522,"byte_end":1616,"line_start":38,"line_end":38,"column_start":1,"column_end":95}},{"value":"/ - **Validator ID:** Every account has an associated validator ID. For some simple staking","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1617,"byte_end":1710,"line_start":39,"line_end":39,"column_start":1,"column_end":94}},{"value":"/   systems, this may just be the same as the account ID. For staking systems using a","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1711,"byte_end":1798,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/   stash/controller model, the validator ID would be the stash account ID of the controller.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1799,"byte_end":1894,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1895,"byte_end":1898,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - **Session key configuration process:** Session keys are set using `set_keys` for use not in","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1899,"byte_end":1996,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/   the next session, but the session after next. They are stored in `NextKeys`, a mapping between","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":1997,"byte_end":2097,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/   the caller's `ValidatorId` and the session keys provided. `set_keys` allows users to set their","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2098,"byte_end":2198,"line_start":45,"line_end":45,"column_start":1,"column_end":101}},{"value":"/   session key prior to being selected as validator. It is a public call since it uses","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2199,"byte_end":2288,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/   `ensure_signed`, which checks that the origin is a signed account. As such, the account ID of","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2289,"byte_end":2388,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/   the origin stored in `NextKeys` may not necessarily be associated with a block author or a","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2389,"byte_end":2485,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/   validator. The session keys of accounts are removed once their account balance is zero.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2486,"byte_end":2579,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2580,"byte_end":2583,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ - **Session length:** This pallet does not assume anything about the length of each session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2584,"byte_end":2680,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/   Rather, it relies on an implementation of `ShouldEndSession` to dictate a new session's start.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2681,"byte_end":2781,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/   This pallet provides the `PeriodicSessions` struct for simple periodic sessions.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2782,"byte_end":2868,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - **Session rotation configuration:** Configure as either a 'normal' (rewardable session where","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2873,"byte_end":2971,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/   rewards are applied) or 'exceptional' (slashable) session rotation.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":2972,"byte_end":3045,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3046,"byte_end":3049,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - **Session rotation process:** At the beginning of each block, the `on_initialize` function","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3050,"byte_end":3146,"line_start":58,"line_end":58,"column_start":1,"column_end":97}},{"value":"/   queries the provided implementation of `ShouldEndSession`. If the session is to end the newly","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3147,"byte_end":3246,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/   activated validator IDs and session keys are taken from storage and passed to the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3247,"byte_end":3334,"line_start":60,"line_end":60,"column_start":1,"column_end":88}},{"value":"/   `SessionHandler`. The validator set supplied by `SessionManager::new_session` and the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3335,"byte_end":3426,"line_start":61,"line_end":61,"column_start":1,"column_end":92}},{"value":"/   corresponding session keys, which may have been registered via `set_keys` during the previous","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3427,"byte_end":3526,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/   session, are written to storage where they will wait one session before being passed to the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3527,"byte_end":3624,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"/   `SessionHandler` themselves.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3625,"byte_end":3659,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3660,"byte_end":3663,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ### Goals","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3664,"byte_end":3677,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3678,"byte_end":3681,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The Session pallet is designed to make the following possible:","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3682,"byte_end":3748,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - Set session keys of the validator set for upcoming sessions.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3753,"byte_end":3819,"line_start":70,"line_end":70,"column_start":1,"column_end":67}},{"value":"/ - Control the length of sessions.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3820,"byte_end":3857,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ - Configure and switch between either normal or exceptional session rotations.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3858,"byte_end":3940,"line_start":72,"line_end":72,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3941,"byte_end":3944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Interface","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3945,"byte_end":3961,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3962,"byte_end":3965,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ### Dispatchable Functions","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3966,"byte_end":3996,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":3997,"byte_end":4000,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - `set_keys` - Set a validator's session keys for upcoming sessions.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4001,"byte_end":4073,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4074,"byte_end":4077,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ### Public Functions","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4078,"byte_end":4102,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4103,"byte_end":4106,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - `rotate_session` - Change to the next session. Register the new authority set. Queue changes","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4107,"byte_end":4205,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/   for next session rotation.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4206,"byte_end":4238,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/ - `disable_index` - Disable a validator by index.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4239,"byte_end":4292,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/ - `disable` - Disable a validator by Validator ID","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4293,"byte_end":4346,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4347,"byte_end":4350,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4351,"byte_end":4363,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4364,"byte_end":4367,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Example from the FRAME","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4368,"byte_end":4398,"line_start":89,"line_end":89,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4399,"byte_end":4402,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [Staking pallet](../pallet_staking/index.html) uses the Session pallet to get the validator","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4403,"byte_end":4502,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ set.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4503,"byte_end":4511,"line_start":92,"line_end":92,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4512,"byte_end":4515,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4516,"byte_end":4523,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use pallet_session as session;","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4524,"byte_end":4558,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4559,"byte_end":4562,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn validators<T: pallet_session::Config>() -> Vec<<T as pallet_session::Config>::ValidatorId> {","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4563,"byte_end":4662,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"/ <pallet_session::Module<T>>::validators()","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4663,"byte_end":4708,"line_start":98,"line_end":98,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4709,"byte_end":4714,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # fn main(){}","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4715,"byte_end":4732,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4733,"byte_end":4740,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4741,"byte_end":4744,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ## Related Modules","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4745,"byte_end":4767,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4768,"byte_end":4771,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ - [Staking](../pallet_staking/index.html)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4772,"byte_end":4817,"line_start":105,"line_end":105,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weights","qualname":"::weights","value":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":29}],"decl_id":null,"docs":" Weights for pallet_session\n THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 2.0.0\n DATE: 2020-10-27, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: [], HIGH RANGE: []\n EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some(\"dev\"), DB CACHE: 128\n","sig":null,"attributes":[{"value":"/ Weights for pallet_session","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":31888,"byte_end":31918,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 2.0.0","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":31919,"byte_end":31999,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ DATE: 2020-10-27, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: [], HIGH RANGE: []","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32000,"byte_end":32080,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some(\"dev\"), DB CACHE: 128","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32081,"byte_end":32167,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"allow(unused_parens)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32486,"byte_end":32510,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32511,"byte_end":32536,"line_start":39,"line_end":39,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32709,"byte_end":32719,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"WeightInfo","qualname":"::weights::WeightInfo","value":"WeightInfo","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" Weight functions needed for pallet_session.\n","sig":null,"attributes":[{"value":"/ Weight functions needed for pallet_session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32651,"byte_end":32698,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32726,"byte_end":32734,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"name":"set_keys","qualname":"::weights::WeightInfo::set_keys","value":"pub fn set_keys() -> Weight","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32752,"byte_end":32762,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"purge_keys","qualname":"::weights::WeightInfo::purge_keys","value":"pub fn purge_keys() -> Weight","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32874,"byte_end":32889,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"SubstrateWeight","qualname":"::weights::SubstrateWeight","value":"","parent":null,"children":[],"decl_id":null,"docs":" Weights for pallet_session using the Substrate node and recommended hardware.\n","sig":null,"attributes":[{"value":"/ Weights for pallet_session using the Substrate node and recommended hardware.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32781,"byte_end":32862,"line_start":51,"line_end":51,"column_start":1,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5683,"byte_end":5699,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"name":"ShouldEndSession","qualname":"::ShouldEndSession","value":"ShouldEndSession<BlockNumber>","parent":null,"children":[{"krate":0,"index":147}],"decl_id":null,"docs":" Decides whether the session should be ended.\n","sig":null,"attributes":[{"value":"/ Decides whether the session should be ended.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5624,"byte_end":5672,"line_start":136,"line_end":136,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5770,"byte_end":5788,"line_start":139,"line_end":139,"column_start":5,"column_end":23},"name":"should_end_session","qualname":"::ShouldEndSession::should_end_session","value":"pub fn should_end_session(BlockNumber) -> bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Return `true` if the session should be ended.\n","sig":null,"attributes":[{"value":"/ Return `true` if the session should be ended.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5716,"byte_end":5765,"line_start":138,"line_end":138,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":6056,"byte_end":6072,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"PeriodicSessions","qualname":"::PeriodicSessions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Ends the session after a fixed period of blocks.","sig":null,"attributes":[{"value":"/ Ends the session after a fixed period of blocks.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5819,"byte_end":5871,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5872,"byte_end":5875,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ The first session will have length of `Offset`, and","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5876,"byte_end":5931,"line_start":144,"line_end":144,"column_start":1,"column_end":56}},{"value":"/ the following sessions will have length of `Period`.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5932,"byte_end":5988,"line_start":145,"line_end":145,"column_start":1,"column_end":57}},{"value":"/ This may prove nonsensical if `Offset` >= `Period`.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":5989,"byte_end":6044,"line_start":146,"line_end":146,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":8965,"byte_end":8979,"line_start":226,"line_end":226,"column_start":11,"column_end":25},"name":"SessionManager","qualname":"::SessionManager","value":"SessionManager<ValidatorId>","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" A trait for managing creation of new validator set.\n","sig":null,"attributes":[{"value":"/ A trait for managing creation of new validator set.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":8899,"byte_end":8954,"line_start":225,"line_end":225,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9838,"byte_end":9849,"line_start":240,"line_end":240,"column_start":5,"column_end":16},"name":"new_session","qualname":"::SessionManager::new_session","value":"pub fn new_session(SessionIndex) -> Option<Vec<ValidatorId>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Plan a new session, and optionally provide the new validator set.","sig":null,"attributes":[{"value":"/ Plan a new session, and optionally provide the new validator set.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":8996,"byte_end":9065,"line_start":227,"line_end":227,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9067,"byte_end":9070,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ Even if the validator-set is the same as before, if any underlying economic conditions have","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9072,"byte_end":9167,"line_start":229,"line_end":229,"column_start":2,"column_end":97}},{"value":"/ changed (i.e. stake-weights), the new validator set must be returned. This is necessary for","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9169,"byte_end":9264,"line_start":230,"line_end":230,"column_start":2,"column_end":97}},{"value":"/ consensus engines making use of the session module to issue a validator-set change so","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9266,"byte_end":9355,"line_start":231,"line_end":231,"column_start":2,"column_end":91}},{"value":"/ misbehavior can be provably associated with the new economic conditions as opposed to the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9357,"byte_end":9450,"line_start":232,"line_end":232,"column_start":2,"column_end":95}},{"value":"/ old. The returned validator set, if any, will not be applied until `new_index`. `new_index`","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9452,"byte_end":9547,"line_start":233,"line_end":233,"column_start":2,"column_end":97}},{"value":"/ is strictly greater than from previous call.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9549,"byte_end":9597,"line_start":234,"line_end":234,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9599,"byte_end":9602,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ The first session start at index 0.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9604,"byte_end":9643,"line_start":236,"line_end":236,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9645,"byte_end":9648,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ `new_session(session)` is guaranteed to be called before `end_session(session-1)`. In other","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9650,"byte_end":9745,"line_start":238,"line_end":238,"column_start":2,"column_end":97}},{"value":"/ words, a new session must always be planned before an ongoing one can be finished.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9747,"byte_end":9833,"line_start":239,"line_end":239,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10061,"byte_end":10072,"line_start":245,"line_end":245,"column_start":5,"column_end":16},"name":"end_session","qualname":"::SessionManager::end_session","value":"pub fn end_session(SessionIndex)","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" End the session.","sig":null,"attributes":[{"value":"/ End the session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9905,"byte_end":9925,"line_start":241,"line_end":241,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9927,"byte_end":9930,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ Because the session pallet can queue validator set the ending session can be lower than the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":9932,"byte_end":10027,"line_start":243,"line_end":243,"column_start":2,"column_end":97}},{"value":"/ last new session index.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10029,"byte_end":10056,"line_start":244,"line_end":244,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10182,"byte_end":10195,"line_start":249,"line_end":249,"column_start":5,"column_end":18},"name":"start_session","qualname":"::SessionManager::start_session","value":"pub fn start_session(SessionIndex)","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Start the session.","sig":null,"attributes":[{"value":"/ Start the session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10100,"byte_end":10122,"line_start":246,"line_end":246,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10124,"byte_end":10127,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ The session start to be used for validation.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10129,"byte_end":10177,"line_start":248,"line_end":248,"column_start":2,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10452,"byte_end":10466,"line_start":259,"line_end":259,"column_start":11,"column_end":25},"name":"SessionHandler","qualname":"::SessionHandler","value":"SessionHandler<ValidatorId>","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Handler for session life cycle events.\n","sig":null,"attributes":[{"value":"/ Handler for session life cycle events.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10399,"byte_end":10441,"line_start":258,"line_end":258,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":177},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10716,"byte_end":10728,"line_start":264,"line_end":264,"column_start":8,"column_end":20},"name":"KEY_TYPE_IDS","qualname":"::SessionHandler::KEY_TYPE_IDS","value":"&'static [KeyTypeId]","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" All the key type ids this session handler can process.","sig":null,"attributes":[{"value":"/ All the key type ids this session handler can process.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10483,"byte_end":10541,"line_start":260,"line_end":260,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10543,"byte_end":10546,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ The order must be the same as it expects them in","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10548,"byte_end":10600,"line_start":262,"line_end":262,"column_start":2,"column_end":54}},{"value":"/ [`on_new_session`](Self::on_new_session<Ks>) and [`on_genesis_session`](Self::on_genesis_session<Ks>).","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10602,"byte_end":10708,"line_start":263,"line_end":263,"column_start":2,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11011,"byte_end":11029,"line_start":270,"line_end":270,"column_start":5,"column_end":23},"name":"on_genesis_session","qualname":"::SessionHandler::on_genesis_session","value":"pub fn on_genesis_session<Ks: OpaqueKeys>(&[(ValidatorId, Ks)])","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" The given validator set will be used for the genesis session.\n It is guaranteed that the given validator set will also be used\n for the second session, therefore the first call to `on_new_session`\n should provide the same validator set.\n","sig":null,"attributes":[{"value":"/ The given validator set will be used for the genesis session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10754,"byte_end":10819,"line_start":266,"line_end":266,"column_start":2,"column_end":67}},{"value":"/ It is guaranteed that the given validator set will also be used","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10821,"byte_end":10888,"line_start":267,"line_end":267,"column_start":2,"column_end":69}},{"value":"/ for the second session, therefore the first call to `on_new_session`","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10890,"byte_end":10962,"line_start":268,"line_end":268,"column_start":2,"column_end":74}},{"value":"/ should provide the same validator set.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":10964,"byte_end":11006,"line_start":269,"line_end":269,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11352,"byte_end":11366,"line_start":277,"line_end":277,"column_start":5,"column_end":19},"name":"on_new_session","qualname":"::SessionHandler::on_new_session","value":"pub fn on_new_session<Ks: OpaqueKeys>(bool, &[(ValidatorId, Ks)],\n                                      &[(ValidatorId, Ks)])","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Session set has changed; act appropriately. Note that this can be called\n before initialization of your module.","sig":null,"attributes":[{"value":"/ Session set has changed; act appropriately. Note that this can be called","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11083,"byte_end":11159,"line_start":272,"line_end":272,"column_start":2,"column_end":78}},{"value":"/ before initialization of your module.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11161,"byte_end":11202,"line_start":273,"line_end":273,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11204,"byte_end":11207,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ `changed` is true whenever any of the session keys or underlying economic","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11209,"byte_end":11286,"line_start":275,"line_end":275,"column_start":2,"column_end":79}},{"value":"/ identities or weightings behind those keys has changed.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11288,"byte_end":11347,"line_start":276,"line_end":276,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11664,"byte_end":11688,"line_start":287,"line_end":287,"column_start":5,"column_end":29},"name":"on_before_session_ending","qualname":"::SessionHandler::on_before_session_ending","value":"pub fn on_before_session_ending()","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" A notification for end of the session.","sig":null,"attributes":[{"value":"/ A notification for end of the session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11486,"byte_end":11528,"line_start":283,"line_end":283,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11530,"byte_end":11533,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ Note it is triggered before any [`SessionManager::end_session`] handlers,","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11535,"byte_end":11612,"line_start":285,"line_end":285,"column_start":2,"column_end":79}},{"value":"/ so we can still affect the validator set.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11614,"byte_end":11659,"line_start":286,"line_end":286,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11774,"byte_end":11785,"line_start":290,"line_end":290,"column_start":5,"column_end":16},"name":"on_disabled","qualname":"::SessionHandler::on_disabled","value":"pub fn on_disabled(usize)","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" A validator got disabled. Act accordingly until a new session begins.\n","sig":null,"attributes":[{"value":"/ A validator got disabled. Act accordingly until a new session begins.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":11696,"byte_end":11769,"line_start":289,"line_end":289,"column_start":2,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13256,"byte_end":13274,"line_start":340,"line_end":340,"column_start":12,"column_end":30},"name":"TestSessionHandler","qualname":"::TestSessionHandler","value":"","parent":null,"children":[],"decl_id":null,"docs":" `SessionHandler` for tests that use `UintAuthorityId` as `Keys`.\n","sig":null,"attributes":[{"value":"/ `SessionHandler` for tests that use `UintAuthorityId` as `Keys`.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13176,"byte_end":13244,"line_start":339,"line_end":339,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13785,"byte_end":13791,"line_start":359,"line_end":359,"column_start":11,"column_end":17},"name":"Config","qualname":"::Config","value":"Config: frame_system::Config","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13855,"byte_end":13860,"line_start":361,"line_end":361,"column_start":7,"column_end":12},"name":"Event","qualname":"::Config::Event","value":"type Event: From<Event> + Into<<Self as frame_system::Config>::Event>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The overarching event type.\n","sig":null,"attributes":[{"value":"/ The overarching event type.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13817,"byte_end":13848,"line_start":360,"line_end":360,"column_start":2,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":200},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13962,"byte_end":13973,"line_start":364,"line_end":364,"column_start":7,"column_end":18},"name":"ValidatorId","qualname":"::Config::ValidatorId","value":"type ValidatorId: Member + Parameter;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A stable ID for a validator.\n","sig":null,"attributes":[{"value":"/ A stable ID for a validator.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13923,"byte_end":13955,"line_start":363,"line_end":363,"column_start":2,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":201},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14106,"byte_end":14119,"line_start":369,"line_end":369,"column_start":7,"column_end":20},"name":"ValidatorIdOf","qualname":"::Config::ValidatorIdOf","value":"type ValidatorIdOf: Convert<Self::AccountId, Option<Self::ValidatorId>>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A conversion from account ID to validator ID.","sig":null,"attributes":[{"value":"/ A conversion from account ID to validator ID.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13997,"byte_end":14046,"line_start":366,"line_end":366,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14048,"byte_end":14051,"line_start":367,"line_end":367,"column_start":2,"column_end":5}},{"value":"/ Its cost must be at most one storage read.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14053,"byte_end":14099,"line_start":368,"line_end":368,"column_start":2,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":202},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14225,"byte_end":14241,"line_start":372,"line_end":372,"column_start":7,"column_end":23},"name":"ShouldEndSession","qualname":"::Config::ShouldEndSession","value":"type ShouldEndSession: ShouldEndSession<Self::BlockNumber>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Indicator for when to end the session.\n","sig":null,"attributes":[{"value":"/ Indicator for when to end the session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14176,"byte_end":14218,"line_start":371,"line_end":371,"column_start":2,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":203},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14539,"byte_end":14558,"line_start":377,"line_end":377,"column_start":7,"column_end":26},"name":"NextSessionRotation","qualname":"::Config::NextSessionRotation","value":"type NextSessionRotation: EstimateNextSessionRotation<Self::BlockNumber>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Something that can predict the next session rotation. This should typically come from the\n same logical unit that provides [`ShouldEndSession`], yet, it gives a best effort estimate.\n It is helpful to implement [`EstimateNextNewSession`].\n","sig":null,"attributes":[{"value":"/ Something that can predict the next session rotation. This should typically come from the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14282,"byte_end":14375,"line_start":374,"line_end":374,"column_start":2,"column_end":95}},{"value":"/ same logical unit that provides [`ShouldEndSession`], yet, it gives a best effort estimate.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14377,"byte_end":14472,"line_start":375,"line_end":375,"column_start":2,"column_end":97}},{"value":"/ It is helpful to implement [`EstimateNextNewSession`].","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14474,"byte_end":14532,"line_start":376,"line_end":376,"column_start":2,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":204},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14654,"byte_end":14668,"line_start":380,"line_end":380,"column_start":7,"column_end":21},"name":"SessionManager","qualname":"::Config::SessionManager","value":"type SessionManager: SessionManager<Self::ValidatorId>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Handler for managing new session.\n","sig":null,"attributes":[{"value":"/ Handler for managing new session.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14610,"byte_end":14647,"line_start":379,"line_end":379,"column_start":2,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":205},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14753,"byte_end":14767,"line_start":383,"line_end":383,"column_start":7,"column_end":21},"name":"SessionHandler","qualname":"::Config::SessionHandler","value":"type SessionHandler: SessionHandler<Self::ValidatorId>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Handler when a session has changed.\n","sig":null,"attributes":[{"value":"/ Handler when a session has changed.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14707,"byte_end":14746,"line_start":382,"line_end":382,"column_start":2,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14826,"byte_end":14830,"line_start":386,"line_end":386,"column_start":7,"column_end":11},"name":"Keys","qualname":"::Config::Keys","value":"type Keys: OpaqueKeys + Member + Parameter + Default;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The keys.\n","sig":null,"attributes":[{"value":"/ The keys.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14806,"byte_end":14819,"line_start":385,"line_end":385,"column_start":2,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15095,"byte_end":15122,"line_start":392,"line_end":392,"column_start":7,"column_end":34},"name":"DisabledValidatorsThreshold","qualname":"::Config::DisabledValidatorsThreshold","value":"type DisabledValidatorsThreshold: Get<Perbill>;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The fraction of validators set that is safe to be disabled.","sig":null,"attributes":[{"value":"/ The fraction of validators set that is safe to be disabled.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14877,"byte_end":14940,"line_start":388,"line_end":388,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14942,"byte_end":14945,"line_start":389,"line_end":389,"column_start":2,"column_end":5}},{"value":"/ After the threshold is reached `disabled` method starts to return true,","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":14947,"byte_end":15022,"line_start":390,"line_end":390,"column_start":2,"column_end":77}},{"value":"/ which in combination with `pallet_staking` forces a new era.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15024,"byte_end":15088,"line_start":391,"line_end":391,"column_start":2,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":208},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15200,"byte_end":15210,"line_start":395,"line_end":395,"column_start":7,"column_end":17},"name":"WeightInfo","qualname":"::Config::WeightInfo","value":"type WeightInfo: WeightInfo;","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Weight information for extrinsics in this pallet.\n","sig":null,"attributes":[{"value":"/ Weight information for extrinsics in this pallet.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15140,"byte_end":15193,"line_start":394,"line_end":394,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15330,"byte_end":15340,"line_start":401,"line_end":401,"column_start":3,"column_end":13},"name":"Validators","qualname":"::Store::Validators","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15421,"byte_end":15433,"line_start":404,"line_end":404,"column_start":3,"column_end":15},"name":"CurrentIndex","qualname":"::Store::CurrentIndex","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15605,"byte_end":15618,"line_start":408,"line_end":408,"column_start":3,"column_end":16},"name":"QueuedChanged","qualname":"::Store::QueuedChanged","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15776,"byte_end":15786,"line_start":412,"line_end":412,"column_start":3,"column_end":13},"name":"QueuedKeys","qualname":"::Store::QueuedKeys","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15970,"byte_end":15988,"line_start":417,"line_end":417,"column_start":3,"column_end":21},"name":"DisabledValidators","qualname":"::Store::DisabledValidators","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":16076,"byte_end":16084,"line_start":420,"line_end":420,"column_start":3,"column_end":11},"name":"NextKeys","qualname":"::Store::NextKeys","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":16223,"byte_end":16231,"line_start":423,"line_end":423,"column_start":3,"column_end":11},"name":"KeyOwner","qualname":"::Store::KeyOwner","value":"decl_storage! {\n\ttrait Store for Module<T: Config> as Session {\n\t\t/// The current set of validators.\n\t\tValidators get(fn validators): Vec<T::ValidatorId>;\n\n\t\t/// Current index of the session.\n\t\tCurrentIndex get(fn current_index): SessionIndex;\n\n\t\t/// True if the underlying economic identities or weighting behind the validators\n\t\t/// has changed in the queued validator set.\n\t\tQueuedChanged: bool;\n\n\t\t/// The queued keys for the next session. When the next session begins, these keys\n\t\t/// will be used to determine the validator's session keys.\n\t\tQueuedKeys get(fn queued_keys): Vec<(T::ValidatorId, T::Keys)>;\n\n\t\t/// Indices of disabled validators.\n\t\t///\n\t\t/// The set is cleared when `on_session_ending` returns a new set of identities.\n\t\tDisabledValidators get(fn disabled_validators): Vec<u32>;\n\n\t\t/// The next session keys for a validator.\n\t\tNextKeys: map hasher(twox_64_concat) T::ValidatorId => Option<T::Keys>;\n\n\t\t/// The owner of a key. The key is the `KeyTypeId` + the encoded key.\n\t\tKeyOwner: map hasher(twox_64_concat) (KeyTypeId, Vec<u8>) => Option<T::ValidatorId>;\n\t}\n\tadd_extra_genesis {\n\t\tconfig(keys): Vec<(T::AccountId, T::ValidatorId, T::Keys)>;\n\t\tbuild(|config: &GenesisConfig<T>| {\n\t\t\tif T::SessionHandler::KEY_TYPE_IDS.len() != T::Keys::key_ids().len() {\n\t\t\t\tpanic!(\"Number of keys in session handler and session keys does not match\");\n\t\t\t}\n\n\t\t\tT::SessionHandler::KEY_TYPE_IDS.iter().zip(T::Keys::key_ids()).enumerate()\n\t\t\t\t.for_each(|(i, (sk, kk))| {\n\t\t\t\t\tif sk != kk {\n\t\t\t\t\t\tpanic!(\n\t\t\t\t\t\t\t\"Session handler and session key expect different key type at index: {}\",\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (account, val, keys) in config.keys.iter().cloned() {\n\t\t\t\t<Module<T>>::inner_set_keys(&val, keys)\n\t\t\t\t\t.expect(\"genesis config must not contain duplicates; qed\");\n\t\t\t\tassert!(\n\t\t\t\t\tframe_system::Pallet::<T>::inc_consumers(&account).is_ok(),\n\t\t\t\t\t\"Account ({:?}) does not exist at genesis to set key. Account not endowed?\",\n\t\t\t\t\taccount,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet initial_validators_0 = T::SessionManager::new_session(0)\n\t\t\t\t.unwrap_or_else(|| {\n\t\t\t\t\tframe_support::print(\"No initial validator provided by `SessionManager`, use \\\n\t\t\t\t\t\tsession config keys to generate initial validator set.\");\n\t\t\t\t\tconfig.keys.iter().map(|x| x.1.clone()).collect()\n\t\t\t\t});\n\t\t\tassert!(!initial_validators_0.is_empty(), \"Empty validator set for session 0 in genesis block!\");\n\n\t\t\tlet initial_validators_1 = T::SessionManager::new_session(1)\n\t\t\t\t.unwrap_or_else(|| initial_validators_0.clone());\n\t\t\tassert!(!initial_validators_1.is_empty(), \"Empty validator set for session 1 in genesis block!\");\n\n\t\t\tlet queued_keys: Vec<_> = initial_validators_1\n\t\t\t\t.iter()\n\t\t\t\t.cloned()\n\t\t\t\t.map(|v| (\n\t\t\t\t\tv.clone(),\n\t\t\t\t\t<Module<T>>::load_keys(&v).unwrap_or_default(),\n\t\t\t\t))\n\t\t\t\t.collect();\n\n\t\t\t// Tell everyone about the genesis session keys\n\t\t\tT::SessionHandler::on_genesis_session::<T::Keys>(&queued_keys);\n\n\t\t\t<Validators<T>>::put(initial_validators_0);\n\t\t\t<QueuedKeys<T>>::put(queued_keys);\n\n\t\t\tT::SessionManager::start_session(0);\n\t\t});\n\t}\n}","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15348,"byte_end":15358,"line_start":401,"line_end":401,"column_start":21,"column_end":31},"name":"validators","qualname":"<Module<T>>::validators","value":"pub fn validators() -> Vec<T::ValidatorId>","parent":null,"children":[],"decl_id":null,"docs":" The current set of validators.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15441,"byte_end":15454,"line_start":404,"line_end":404,"column_start":23,"column_end":36},"name":"current_index","qualname":"<Module<T>>::current_index","value":"pub fn current_index() -> SessionIndex","parent":null,"children":[],"decl_id":null,"docs":" Current index of the session.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15794,"byte_end":15805,"line_start":412,"line_end":412,"column_start":21,"column_end":32},"name":"queued_keys","qualname":"<Module<T>>::queued_keys","value":"pub fn queued_keys() -> Vec<(T::ValidatorId, T::Keys)>","parent":null,"children":[],"decl_id":null,"docs":" The queued keys for the next session. When the next session begins, these keys\n will be used to determine the validator's session keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15996,"byte_end":16015,"line_start":417,"line_end":417,"column_start":29,"column_end":48},"name":"disabled_validators","qualname":"<Module<T>>::disabled_validators","value":"pub fn disabled_validators() -> Vec<u32>","parent":null,"children":[],"decl_id":null,"docs":" Indices of disabled validators.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15330,"byte_end":15340,"line_start":401,"line_end":401,"column_start":3,"column_end":13},"name":"__GetByteStructValidators","qualname":"::__GetByteStructValidators","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15421,"byte_end":15433,"line_start":404,"line_end":404,"column_start":3,"column_end":15},"name":"__GetByteStructCurrentIndex","qualname":"::__GetByteStructCurrentIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15605,"byte_end":15618,"line_start":408,"line_end":408,"column_start":3,"column_end":16},"name":"__GetByteStructQueuedChanged","qualname":"::__GetByteStructQueuedChanged","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15776,"byte_end":15786,"line_start":412,"line_end":412,"column_start":3,"column_end":13},"name":"__GetByteStructQueuedKeys","qualname":"::__GetByteStructQueuedKeys","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":15970,"byte_end":15988,"line_start":417,"line_end":417,"column_start":3,"column_end":21},"name":"__GetByteStructDisabledValidators","qualname":"::__GetByteStructDisabledValidators","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":16076,"byte_end":16084,"line_start":420,"line_end":420,"column_start":3,"column_end":11},"name":"__GetByteStructNextKeys","qualname":"::__GetByteStructNextKeys","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":16223,"byte_end":16231,"line_start":423,"line_end":423,"column_start":3,"column_end":11},"name":"__GetByteStructKeyOwner","qualname":"::__GetByteStructKeyOwner","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":16341,"byte_end":16345,"line_start":426,"line_end":426,"column_start":10,"column_end":14},"name":"keys","qualname":"::GenesisConfig::keys","value":"std::vec::Vec<(<T as frame_system::Config>::AccountId, <T as Config>::ValidatorId, <T as Config>::Keys)>","parent":{"krate":0,"index":2732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18595,"byte_end":18607,"line_start":496,"line_end":496,"column_start":3,"column_end":15},"name":"InvalidProof","qualname":"::Error::InvalidProof","value":"Error::InvalidProof","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Invalid ownership proof.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18657,"byte_end":18680,"line_start":498,"line_end":498,"column_start":3,"column_end":26},"name":"NoAssociatedValidatorId","qualname":"::Error::NoAssociatedValidatorId","value":"Error::NoAssociatedValidatorId","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" No associated validator ID for account.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18716,"byte_end":18729,"line_start":500,"line_end":500,"column_start":3,"column_end":16},"name":"DuplicatedKey","qualname":"::Error::DuplicatedKey","value":"Error::DuplicatedKey","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Registered duplicate key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18781,"byte_end":18787,"line_start":502,"line_end":502,"column_start":3,"column_end":9},"name":"NoKeys","qualname":"::Error::NoKeys","value":"Error::NoKeys","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" No keys are associated with this account.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18868,"byte_end":18877,"line_start":504,"line_end":504,"column_start":3,"column_end":12},"name":"NoAccount","qualname":"::Error::NoAccount","value":"Error::NoAccount","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Key setting account is not live, so it's impossible to associate keys.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18532,"byte_end":18537,"line_start":494,"line_end":494,"column_start":11,"column_end":16},"name":"Error","qualname":"::Error","value":"pub enum Error<T: Config> {\n    __Ignore(::frame_support::sp_std::marker::PhantomData<(T,)>,\n             ::frame_support::Never),\n    InvalidProof,\n    NoAssociatedValidatorId,\n    DuplicatedKey,\n    NoKeys,\n    NoAccount,\n}","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780}],"decl_id":null,"docs":" Error for the session module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2840},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18912,"byte_end":18918,"line_start":509,"line_end":509,"column_start":13,"column_end":19},"name":"Module","qualname":"::Module","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":19692,"byte_end":19700,"line_start":529,"line_end":529,"column_start":10,"column_end":18},"name":"set_keys","qualname":"<Module<T>>::set_keys","value":"pub fn set_keys(T::Origin, T::Keys, Vec<u8>) -> dispatch::DispatchResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the session key(s) of the function caller to `keys`.\n Allows an account to set its session key prior to becoming a validator.\n This doesn't take effect until the next session.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":20503,"byte_end":20513,"line_start":552,"line_end":552,"column_start":10,"column_end":20},"name":"purge_keys","qualname":"<Module<T>>::purge_keys","value":"pub fn purge_keys(T::Origin) -> ::frame_support::dispatch::DispatchResult","parent":null,"children":[],"decl_id":null,"docs":" Removes any session key(s) of the function caller.\n This doesn't take effect until the next session.","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10945872,"byte_end":10945898,"line_start":1679,"line_end":1679,"column_start":3,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":19692,"byte_end":19700,"line_start":529,"line_end":529,"column_start":10,"column_end":18},"name":"set_keys","qualname":"::Call::set_keys","value":"Call::set_keys(T::Keys, Vec<u8>)","parent":{"krate":0,"index":2915},"children":[],"decl_id":null,"docs":" Sets the session key(s) of the function caller to `keys`.\n Allows an account to set its session key prior to becoming a validator.\n This doesn't take effect until the next session.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10948928,"byte_end":10948958,"line_start":1786,"line_end":1786,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":20503,"byte_end":20513,"line_start":552,"line_end":552,"column_start":10,"column_end":20},"name":"purge_keys","qualname":"::Call::purge_keys","value":"Call::purge_keys()","parent":{"krate":0,"index":2915},"children":[],"decl_id":null,"docs":" Removes any session key(s) of the function caller.\n This doesn't take effect until the next session.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10948928,"byte_end":10948958,"line_start":1786,"line_end":1786,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":18939,"byte_end":18943,"line_start":509,"line_end":509,"column_start":40,"column_end":44},"name":"Call","qualname":"::Call","value":"pub enum Call<T: Config> {\n    __PhantomItem(::frame_support::sp_std::marker::PhantomData<(T,)>,\n                  ::frame_support::Never),\n    set_keys(T::Keys, Vec<u8>),\n    purge_keys(),\n}","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2917},{"krate":0,"index":2921}],"decl_id":null,"docs":" Dispatchable calls.","sig":null,"attributes":[{"value":"/ Dispatchable calls.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10949360,"byte_end":10949383,"line_start":1807,"line_end":1807,"column_start":3,"column_end":26}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10949386,"byte_end":10949389,"line_start":1808,"line_end":1808,"column_start":3,"column_end":6}},{"value":"/ Each variant of this enum maps to a dispatchable function from the associated module.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/support/src/dispatch.rs","byte_start":10949392,"byte_end":10949481,"line_start":1809,"line_end":1809,"column_start":3,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21332,"byte_end":21346,"line_start":577,"line_end":577,"column_start":9,"column_end":23},"name":"rotate_session","qualname":"<Module<T>>::rotate_session","value":"pub fn rotate_session()","parent":null,"children":[],"decl_id":null,"docs":" Move on to next session. Register new validator set and session keys. Changes\n to the validator set have a session of delay to take effect. This allows for\n equivocation punishment after a fork.\n","sig":null,"attributes":[{"value":"/ Move on to next session. Register new validator set and session keys. Changes","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21117,"byte_end":21198,"line_start":574,"line_end":574,"column_start":2,"column_end":83}},{"value":"/ to the validator set have a session of delay to take effect. This allows for","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21200,"byte_end":21280,"line_start":575,"line_end":575,"column_start":2,"column_end":82}},{"value":"/ equivocation punishment after a fork.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21282,"byte_end":21323,"line_start":576,"line_end":576,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24070,"byte_end":24083,"line_start":666,"line_end":666,"column_start":9,"column_end":22},"name":"disable_index","qualname":"<Module<T>>::disable_index","value":"pub fn disable_index(usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Disable the validator of index `i`.","sig":null,"attributes":[{"value":"/ Disable the validator of index `i`.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":23907,"byte_end":23946,"line_start":662,"line_end":662,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":23948,"byte_end":23951,"line_start":663,"line_end":663,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if this causes a `DisabledValidatorsThreshold` of validators","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":23953,"byte_end":24032,"line_start":664,"line_end":664,"column_start":2,"column_end":81}},{"value":"/ to be already disabled.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24034,"byte_end":24061,"line_start":665,"line_end":665,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24936,"byte_end":24943,"line_start":692,"line_end":692,"column_start":9,"column_end":16},"name":"disable","qualname":"<Module<T>>::disable","value":"pub fn disable(&T::ValidatorId) -> sp_std::result::Result<bool, ()>","parent":null,"children":[],"decl_id":null,"docs":" Disable the validator identified by `c`. (If using with the staking module,\n this would be their *stash* account.)","sig":null,"attributes":[{"value":"/ Disable the validator identified by `c`. (If using with the staking module,","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24597,"byte_end":24676,"line_start":686,"line_end":686,"column_start":2,"column_end":81}},{"value":"/ this would be their *stash* account.)","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24678,"byte_end":24719,"line_start":687,"line_end":687,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24721,"byte_end":24724,"line_start":688,"line_end":688,"column_start":2,"column_end":5}},{"value":"/ Returns `Ok(true)` if more than `DisabledValidatorsThreshold` validators in current","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24726,"byte_end":24813,"line_start":689,"line_end":689,"column_start":2,"column_end":89}},{"value":"/ session is already disabled.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24815,"byte_end":24847,"line_start":690,"line_end":690,"column_start":2,"column_end":34}},{"value":"/ If used with the staking module it allows to force a new era in such case.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":24849,"byte_end":24927,"line_start":691,"line_end":691,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25886,"byte_end":25898,"line_start":711,"line_end":711,"column_start":9,"column_end":21},"name":"upgrade_keys","qualname":"<Module<T>>::upgrade_keys","value":"pub fn upgrade_keys<Old, F>(F) where Old: OpaqueKeys + Member + Decode,\nF: Fn(T::ValidatorId, Old) -> T::Keys","parent":null,"children":[],"decl_id":null,"docs":" Upgrade the key type from some old type to a new type. Supports adding\n and removing key types.","sig":null,"attributes":[{"value":"/ Upgrade the key type from some old type to a new type. Supports adding","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25091,"byte_end":25165,"line_start":696,"line_end":696,"column_start":2,"column_end":76}},{"value":"/ and removing key types.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25167,"byte_end":25194,"line_start":697,"line_end":697,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25196,"byte_end":25199,"line_start":698,"line_end":698,"column_start":2,"column_end":5}},{"value":"/ This function should be used with extreme care and only during an","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25201,"byte_end":25270,"line_start":699,"line_end":699,"column_start":2,"column_end":71}},{"value":"/ `on_runtime_upgrade` block. Misuse of this function can put your blockchain","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25272,"byte_end":25351,"line_start":700,"line_end":700,"column_start":2,"column_end":81}},{"value":"/ into an unrecoverable state.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25353,"byte_end":25385,"line_start":701,"line_end":701,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25387,"byte_end":25390,"line_start":702,"line_end":702,"column_start":2,"column_end":5}},{"value":"/ Care should be taken that the raw versions of the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25392,"byte_end":25445,"line_start":703,"line_end":703,"column_start":2,"column_end":55}},{"value":"/ added keys are unique for every `ValidatorId, KeyTypeId` combination.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25447,"byte_end":25520,"line_start":704,"line_end":704,"column_start":2,"column_end":75}},{"value":"/ This is an invariant that the session module typically maintains internally.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25522,"byte_end":25602,"line_start":705,"line_end":705,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25604,"byte_end":25607,"line_start":706,"line_end":706,"column_start":2,"column_end":5}},{"value":"/ As the actual values of the keys are typically not known at runtime upgrade,","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25609,"byte_end":25689,"line_start":707,"line_end":707,"column_start":2,"column_end":82}},{"value":"/ it's recommended to initialize the keys to a (unique) dummy value with the expectation","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25691,"byte_end":25781,"line_start":708,"line_end":708,"column_start":2,"column_end":92}},{"value":"/ that all validators should invoke `set_keys` before those keys are actually","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25783,"byte_end":25862,"line_start":709,"line_end":709,"column_start":2,"column_end":81}},{"value":"/ required.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":25864,"byte_end":25877,"line_start":710,"line_end":710,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":29411,"byte_end":29420,"line_start":827,"line_end":827,"column_start":9,"column_end":18},"name":"key_owner","qualname":"<Module<T>>::key_owner","value":"pub fn key_owner(KeyTypeId, &[u8]) -> Option<T::ValidatorId>","parent":null,"children":[],"decl_id":null,"docs":" Query the owner of a session key by returning the owner's validator ID.\n","sig":null,"attributes":[{"value":"/ Query the owner of a session key by returning the owner's validator ID.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":29327,"byte_end":29402,"line_start":826,"line_end":826,"column_start":2,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30253,"byte_end":30279,"line_start":856,"line_end":856,"column_start":12,"column_end":38},"name":"FindAccountFromAuthorIndex","qualname":"::FindAccountFromAuthorIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps the author-scraping logic for consensus engines that can recover\n the canonical index of an author. This then transforms it into the\n registering account-ID of that session key index.\n","sig":null,"attributes":[{"value":"/ Wraps the author-scraping logic for consensus engines that can recover","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30042,"byte_end":30116,"line_start":853,"line_end":853,"column_start":1,"column_end":75}},{"value":"/ the canonical index of an author. This then transforms it into the","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30117,"byte_end":30187,"line_start":854,"line_end":854,"column_start":1,"column_end":71}},{"value":"/ registering account-ID of that session key index.","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30188,"byte_end":30241,"line_start":855,"line_end":855,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32955,"byte_end":32970,"line_start":53,"line_end":53,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":6307,"byte_end":6323,"line_start":153,"line_end":153,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":6641,"byte_end":6657,"line_start":165,"line_end":165,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13310,"byte_end":13328,"line_start":341,"line_end":341,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13676,"byte_end":13682,"line_start":353,"line_end":353,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21104,"byte_end":21110,"line_start":573,"line_end":573,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":29789,"byte_end":29795,"line_start":840,"line_end":840,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30405,"byte_end":30431,"line_start":859,"line_end":859,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30773,"byte_end":30779,"line_start":871,"line_end":871,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":4969,"byte_end":4976,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/weights.rs","byte_start":32955,"byte_end":32970,"line_start":53,"line_end":53,"column_start":46,"column_end":61},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":0,"index":18}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":6307,"byte_end":6323,"line_start":153,"line_end":153,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":148},"to":{"krate":0,"index":145}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":6641,"byte_end":6657,"line_start":165,"line_end":165,"column_start":48,"column_end":64},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":148},"to":{"krate":17,"index":3191}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13310,"byte_end":13328,"line_start":341,"line_end":341,"column_start":35,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":175}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13676,"byte_end":13682,"line_start":353,"line_end":353,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2840},"to":{"krate":17,"index":3227}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":13807,"byte_end":13813,"line_start":359,"line_end":359,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":199,"index":1441},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":21104,"byte_end":21110,"line_start":573,"line_end":573,"column_start":17,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":29789,"byte_end":29795,"line_start":840,"line_end":840,"column_start":48,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2840},"to":{"krate":17,"index":3156}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30405,"byte_end":30431,"line_start":859,"line_end":859,"column_start":6,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":242},"to":{"krate":17,"index":3166}},{"span":{"file_name":"/Users/pacmac/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/frame/session/src/lib.rs","byte_start":30773,"byte_end":30779,"line_start":871,"line_end":871,"column_start":60,"column_end":66},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2840},"to":{"krate":17,"index":3201}}]}